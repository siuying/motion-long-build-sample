<?xml version='1.0'?>
<signatures version='1.0'>
<constant name='EvernoteSDKErrorDomain' declared_type='NSString*' const='true' type='@'/>
<constant name='WebArchivePboardType' declared_type='NSString*' type='@'/>
<constant name='WebResourceDataKey' declared_type='NSString*' type='@'/>
<constant name='WebResourceFrameNameKey' declared_type='NSString*' type='@'/>
<constant name='WebResourceMIMETypeKey' declared_type='NSString*' type='@'/>
<constant name='WebResourceResponseKey' declared_type='NSString*' type='@'/>
<constant name='WebResourceTextEncodingNameKey' declared_type='NSString*' type='@'/>
<constant name='WebResourceURLKey' declared_type='NSString*' type='@'/>
<constant name='kSSKeychainAccountKey' declared_type='NSString*' const='true' type='@'/>
<constant name='kSSKeychainClassKey' declared_type='NSString*' const='true' type='@'/>
<constant name='kSSKeychainCreatedAtKey' declared_type='NSString*' const='true' type='@'/>
<constant name='kSSKeychainDescriptionKey' declared_type='NSString*' const='true' type='@'/>
<constant name='kSSKeychainErrorDomain' declared_type='NSString*' const='true' type='@'/>
<constant name='kSSKeychainLabelKey' declared_type='NSString*' const='true' type='@'/>
<constant name='kSSKeychainLastModifiedKey' declared_type='NSString*' const='true' type='@'/>
<constant name='kSSKeychainWhereKey' declared_type='NSString*' const='true' type='@'/>
<constant name='kTSockerServer_TransportKey' declared_type='NSString*' const='true' type='@'/>
<constant name='kTSocketServer_ClientConnectionFinishedForProcessorNotification' declared_type='NSString*' const='true' type='@'/>
<constant name='kTSocketServer_ProcessorKey' declared_type='NSString*' const='true' type='@'/>
<enum name='DEFAULT_LOG_MAX_FILE_SIZE' value='1048576'/>
<enum name='DEFAULT_LOG_MAX_NUM_LOG_FILES' value='5'/>
<enum name='DEFAULT_LOG_ROLLING_FREQUENCY' value='86400'/>
<enum name='EDAMErrorCode_AUTH_EXPIRED' value='9'/>
<enum name='EDAMErrorCode_BAD_DATA_FORMAT' value='2'/>
<enum name='EDAMErrorCode_DATA_CONFLICT' value='10'/>
<enum name='EDAMErrorCode_DATA_REQUIRED' value='5'/>
<enum name='EDAMErrorCode_ENML_VALIDATION' value='11'/>
<enum name='EDAMErrorCode_INTERNAL_ERROR' value='4'/>
<enum name='EDAMErrorCode_INVALID_AUTH' value='8'/>
<enum name='EDAMErrorCode_LEN_TOO_LONG' value='14'/>
<enum name='EDAMErrorCode_LEN_TOO_SHORT' value='13'/>
<enum name='EDAMErrorCode_LIMIT_REACHED' value='6'/>
<enum name='EDAMErrorCode_PERMISSION_DENIED' value='3'/>
<enum name='EDAMErrorCode_QUOTA_REACHED' value='7'/>
<enum name='EDAMErrorCode_SHARD_UNAVAILABLE' value='12'/>
<enum name='EDAMErrorCode_TOO_FEW' value='15'/>
<enum name='EDAMErrorCode_TOO_MANY' value='16'/>
<enum name='EDAMErrorCode_UNKNOWN' value='1'/>
<enum name='EDAMErrorCode_UNSUPPORTED_OPERATION' value='17'/>
<enum name='EvernoteSDKErrorCode_TRANSPORT_ERROR' value='-3000'/>
<enum name='LOG_ASYNC_ENABLED' value='1'/>
<enum name='LOG_ASYNC_ERROR' value='0'/>
<enum name='LOG_ASYNC_INFO' value='1'/>
<enum name='LOG_ASYNC_VERBOSE' value='1'/>
<enum name='LOG_ASYNC_WARN' value='1'/>
<enum name='LOG_FLAG_ERROR' value='1'/>
<enum name='LOG_FLAG_INFO' value='4'/>
<enum name='LOG_FLAG_VERBOSE' value='8'/>
<enum name='LOG_FLAG_WARN' value='2'/>
<enum name='LOG_LEVEL_ERROR' value='1'/>
<enum name='LOG_LEVEL_INFO' value='7'/>
<enum name='LOG_LEVEL_OFF' value='0'/>
<enum name='LOG_LEVEL_VERBOSE' value='15'/>
<enum name='LOG_LEVEL_WARN' value='3'/>
<enum name='NoteSortOrder_CREATED' value='1'/>
<enum name='NoteSortOrder_RELEVANCE' value='3'/>
<enum name='NoteSortOrder_TITLE' value='5'/>
<enum name='NoteSortOrder_UPDATED' value='2'/>
<enum name='NoteSortOrder_UPDATE_SEQUENCE_NUMBER' value='4'/>
<enum name='PremiumOrderStatus_ACTIVE' value='2'/>
<enum name='PremiumOrderStatus_CANCELED' value='5'/>
<enum name='PremiumOrderStatus_CANCELLATION_PENDING' value='4'/>
<enum name='PremiumOrderStatus_FAILED' value='3'/>
<enum name='PremiumOrderStatus_NONE' value='0'/>
<enum name='PremiumOrderStatus_PENDING' value='1'/>
<enum name='PrivilegeLevel_ADMIN' value='9'/>
<enum name='PrivilegeLevel_MANAGER' value='7'/>
<enum name='PrivilegeLevel_NORMAL' value='1'/>
<enum name='PrivilegeLevel_PREMIUM' value='3'/>
<enum name='PrivilegeLevel_SUPPORT' value='8'/>
<enum name='QueryFormat_SEXP' value='2'/>
<enum name='QueryFormat_USER' value='1'/>
<enum name='SSKeychainErrorAuthorizationFailed' value='-25293'/>
<enum name='SSKeychainErrorBadArguments' value='-1001'/>
<enum name='SSKeychainErrorDuplicatedItem' value='-25299'/>
<enum name='SSKeychainErrorFailedToAllocated' value='-108'/>
<enum name='SSKeychainErrorFailedToDecode' value='-26275'/>
<enum name='SSKeychainErrorInteractionNotAllowed' value='-25308'/>
<enum name='SSKeychainErrorInvalidParameter' value='-50'/>
<enum name='SSKeychainErrorNoPassword' value='-1002'/>
<enum name='SSKeychainErrorNone' value='0'/>
<enum name='SSKeychainErrorNotAvailable' value='-25291'/>
<enum name='SSKeychainErrorNotFound' value='-25300'/>
<enum name='SponsoredGroupRole_GROUP_ADMIN' value='2'/>
<enum name='SponsoredGroupRole_GROUP_MEMBER' value='1'/>
<enum name='SponsoredGroupRole_GROUP_OWNER' value='3'/>
<enum name='TApplicationException_BAD_SEQUENCE_ID' value='4'/>
<enum name='TApplicationException_INTERNAL_ERROR' value='6'/>
<enum name='TApplicationException_INVALID_MESSAGE_TYPE' value='2'/>
<enum name='TApplicationException_MISSING_RESULT' value='5'/>
<enum name='TApplicationException_PROTOCOL_ERROR' value='7'/>
<enum name='TApplicationException_UNKNOWN' value='0'/>
<enum name='TApplicationException_UNKNOWN_METHOD' value='1'/>
<enum name='TApplicationException_WRONG_METHOD_NAME' value='3'/>
<enum name='TMessageType_CALL' value='1'/>
<enum name='TMessageType_EXCEPTION' value='3'/>
<enum name='TMessageType_ONEWAY' value='4'/>
<enum name='TMessageType_REPLY' value='2'/>
<enum name='TType_BOOL' value='2'/>
<enum name='TType_BYTE' value='3'/>
<enum name='TType_DOUBLE' value='4'/>
<enum name='TType_I16' value='6'/>
<enum name='TType_I32' value='8'/>
<enum name='TType_I64' value='10'/>
<enum name='TType_LIST' value='15'/>
<enum name='TType_MAP' value='13'/>
<enum name='TType_SET' value='14'/>
<enum name='TType_STOP' value='0'/>
<enum name='TType_STRING' value='11'/>
<enum name='TType_STRUCT' value='12'/>
<enum name='TType_VOID' value='1'/>
<function name='DDExtractFileNameWithoutExtension'>
<arg name='filePath' declared_type='char*' const='true' type='*'/>
<arg name='copy' declared_type='BOOL' type='B'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NewBase64Decode'>
<arg name='inputBuffer' declared_type='char*' const='true' type='*'/>
<arg name='length' declared_type='size_t' type='L'/>
<arg name='outputLength' declared_type='size_t*' type='^I'/>
<retval declared_type='void*' type='^v'/>
</function>
<function name='NewBase64Encode'>
<arg name='inputBuffer' declared_type='void*' const='true' type='^v'/>
<arg name='length' declared_type='size_t' type='L'/>
<arg name='separateLines' declared_type='_Bool' type='B'/>
<arg name='outputLength' declared_type='size_t*' type='^I'/>
<retval declared_type='char*' type='*'/>
</function>
<class name='DDASLLogger'>
<method selector='sharedInstance' class_method='true'>
<retval declared_type='DDASLLogger*' type='@'/>
</method>
</class>
<class name='DDAbstractDatabaseLogger'>
<method selector='deleteInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='deleteOldLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteOnEverySave'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='maxAge'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='savePendingLogEntries'>
<retval declared_type='void' type='v'/>
</method>
<method selector='saveThreshold'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setDeleteInterval:'>
<arg name='deleteInterval' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeleteOnEverySave:'>
<arg name='deleteOnEverySave' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxAge:'>
<arg name='maxAge' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg name='saveInterval' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveThreshold:'>
<arg name='saveThreshold' declared_type='NSUInteger' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDAbstractLogger'>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setLogFormatter:'>
<arg name='formatter' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDFileLogger'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogFileManager:'>
<arg name='logFileManager' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='logFileManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='maximumFileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='rollLogFile'>
<retval declared_type='void' type='v'/>
</method>
<method selector='rollingFrequency'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='setLogFileManager:'>
<arg name='logFileManager' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumFileSize:'>
<arg name='maximumFileSize' declared_type='unsigned long long' type='Q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRollingFrequency:'>
<arg name='rollingFrequency' declared_type='NSTimeInterval' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLog'>
<method selector='addLogger:' class_method='true'>
<arg name='logger' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='flushLog' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method variadic='true' selector='log:level:flag:context:file:function:line:tag:format:' class_method='true'>
<arg name='synchronous' declared_type='BOOL' type='B' index='0'/>
<arg name='level' declared_type='int' type='i' index='1'/>
<arg name='flag' declared_type='int' type='i' index='2'/>
<arg name='context' declared_type='int' type='i' index='3'/>
<arg name='file' declared_type='char*' const='true' type='*' index='4'/>
<arg name='function' declared_type='char*' const='true' type='*' index='5'/>
<arg name='line' declared_type='int' type='i' index='6'/>
<arg name='tag' declared_type='id' type='@' index='7'/>
<arg name='format' printf_format='true' declared_type='NSString*' type='@' index='8'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='logLevelForClass:' class_method='true'>
<arg name='aClass' declared_type='Class' type='#' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='logLevelForClassWithName:' class_method='true'>
<arg name='aClassName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='loggingQueue' class_method='true'>
<retval declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
</method>
<method selector='registeredClassNames' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='registeredClasses' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='removeAllLoggers' class_method='true'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeLogger:' class_method='true'>
<arg name='logger' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLogLevel:forClass:' class_method='true'>
<arg name='logLevel' declared_type='int' type='i' index='0'/>
<arg name='aClass' declared_type='Class' type='#' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLogLevel:forClassWithName:' class_method='true'>
<arg name='logLevel' declared_type='int' type='i' index='0'/>
<arg name='aClassName' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileFormatterDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateFormatter:'>
<arg name='dateFormatter' declared_type='NSDateFormatter*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogFileInfo'>
<method selector='addExtensionAttributeWithName:'>
<arg name='attrName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='age'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='creationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='fileAttributes'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fileSize'>
<retval declared_type='unsigned long long' type='Q'/>
</method>
<method selector='hasExtensionAttributeWithName:'>
<arg name='attrName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithFilePath:'>
<arg name='filePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isArchived'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logFileWithPath:' class_method='true'>
<arg name='filePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='modificationDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='removeExtensionAttributeWithName:'>
<arg name='attrName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renameFile:'>
<arg name='newFileName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='reverseCompareByCreationDate:'>
<arg name='another' declared_type='DDLogFileInfo*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i'/>
</method>
<method selector='reverseCompareByModificationDate:'>
<arg name='another' declared_type='DDLogFileInfo*' type='@' index='0'/>
<retval declared_type='NSComparisonResult' type='i'/>
</method>
<method selector='setCreationDate:'>
<arg name='creationDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileAttributes:'>
<arg name='fileAttributes' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileName:'>
<arg name='fileName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilePath:'>
<arg name='filePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIsArchived:'>
<arg name='isArchived' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setModificationDate:'>
<arg name='modificationDate' declared_type='NSDate*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='DDLogFileManagerDefault'>
<method selector='init'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithLogsDirectory:'>
<arg name='logsDirectory' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='DDLogMessage'>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithLogMsg:level:flag:context:file:function:line:tag:'>
<arg name='logMsg' declared_type='NSString*' type='@' index='0'/>
<arg name='logLevel' declared_type='int' type='i' index='1'/>
<arg name='logFlag' declared_type='int' type='i' index='2'/>
<arg name='logContext' declared_type='int' type='i' index='3'/>
<arg name='file' declared_type='char*' const='true' type='*' index='4'/>
<arg name='function' declared_type='char*' const='true' type='*' index='5'/>
<arg name='line' declared_type='int' type='i' index='6'/>
<arg name='tag' declared_type='id' type='@' index='7'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='methodName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='threadID'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='DDTTYLogger'>
<method selector='sharedInstance' class_method='true'>
<retval declared_type='DDTTYLogger*' type='@'/>
</method>
</class>
<class name='DTWebArchive'>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='initWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithMainResource:subresources:subframeArchives:'>
<arg name='mainResource' declared_type='DTWebResource*' type='@' index='0'/>
<arg name='subresources' declared_type='NSArray*' type='@' index='1'/>
<arg name='subframeArchives' declared_type='NSArray*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mainResource'>
<retval declared_type='DTWebResource*' type='@'/>
</method>
<method selector='subframeArchives'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='subresources'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='DTWebResource'>
<method selector='MIMEType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='data'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='frameName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithData:URL:MIMEType:textEncodingName:frameName:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<arg name='URL' declared_type='NSURL*' type='@' index='1'/>
<arg name='MIMEType' declared_type='NSString*' type='@' index='2'/>
<arg name='textEncodingName' declared_type='NSString*' type='@' index='3'/>
<arg name='frameName' declared_type='NSString*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDictionary:'>
<arg name='dictionary' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='textEncodingName'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='EDAMAccounting'>
<method selector='currency'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='currencyIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithUploadLimit:uploadLimitEnd:uploadLimitNextMonth:premiumServiceStatus:premiumOrderNumber:premiumCommerceService:premiumServiceStart:premiumServiceSKU:lastSuccessfulCharge:lastFailedCharge:lastFailedChargeReason:nextPaymentDue:premiumLockUntil:updated:premiumSubscriptionNumber:lastRequestedCharge:currency:unitPrice:'>
<arg name='uploadLimit' declared_type='int64_t' type='q' index='0'/>
<arg name='uploadLimitEnd' declared_type='EDAMTimestamp' type='q' index='1'/>
<arg name='uploadLimitNextMonth' declared_type='int64_t' type='q' index='2'/>
<arg name='premiumServiceStatus' declared_type='int' type='i' index='3'/>
<arg name='premiumOrderNumber' declared_type='NSString*' type='@' index='4'/>
<arg name='premiumCommerceService' declared_type='NSString*' type='@' index='5'/>
<arg name='premiumServiceStart' declared_type='EDAMTimestamp' type='q' index='6'/>
<arg name='premiumServiceSKU' declared_type='NSString*' type='@' index='7'/>
<arg name='lastSuccessfulCharge' declared_type='EDAMTimestamp' type='q' index='8'/>
<arg name='lastFailedCharge' declared_type='EDAMTimestamp' type='q' index='9'/>
<arg name='lastFailedChargeReason' declared_type='NSString*' type='@' index='10'/>
<arg name='nextPaymentDue' declared_type='EDAMTimestamp' type='q' index='11'/>
<arg name='premiumLockUntil' declared_type='EDAMTimestamp' type='q' index='12'/>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='13'/>
<arg name='premiumSubscriptionNumber' declared_type='NSString*' type='@' index='14'/>
<arg name='lastRequestedCharge' declared_type='EDAMTimestamp' type='q' index='15'/>
<arg name='currency' declared_type='NSString*' type='@' index='16'/>
<arg name='unitPrice' declared_type='int32_t' type='i' index='17'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lastFailedCharge'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='lastFailedChargeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastFailedChargeReason'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lastFailedChargeReasonIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastRequestedCharge'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='lastRequestedChargeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lastSuccessfulCharge'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='lastSuccessfulChargeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nextPaymentDue'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='nextPaymentDueIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumCommerceService'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='premiumCommerceServiceIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumLockUntil'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='premiumLockUntilIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumOrderNumber'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='premiumOrderNumberIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumServiceSKU'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='premiumServiceSKUIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumServiceStart'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='premiumServiceStartIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumServiceStatus'>
<retval declared_type='int' type='i'/>
</method>
<method selector='premiumServiceStatusIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumSubscriptionNumber'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='premiumSubscriptionNumberIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrency:'>
<arg name='currency' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastFailedCharge:'>
<arg name='lastFailedCharge' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastFailedChargeReason:'>
<arg name='lastFailedChargeReason' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastRequestedCharge:'>
<arg name='lastRequestedCharge' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastSuccessfulCharge:'>
<arg name='lastSuccessfulCharge' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNextPaymentDue:'>
<arg name='nextPaymentDue' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumCommerceService:'>
<arg name='premiumCommerceService' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumLockUntil:'>
<arg name='premiumLockUntil' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumOrderNumber:'>
<arg name='premiumOrderNumber' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumServiceSKU:'>
<arg name='premiumServiceSKU' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumServiceStart:'>
<arg name='premiumServiceStart' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumServiceStatus:'>
<arg name='premiumServiceStatus' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumSubscriptionNumber:'>
<arg name='premiumSubscriptionNumber' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnitPrice:'>
<arg name='unitPrice' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdated:'>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadLimit:'>
<arg name='uploadLimit' declared_type='int64_t' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadLimitEnd:'>
<arg name='uploadLimitEnd' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadLimitNextMonth:'>
<arg name='uploadLimitNextMonth' declared_type='int64_t' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='unitPrice'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='unitPriceIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updated'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='updatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='uploadLimit'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='uploadLimitEnd'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='uploadLimitEndIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='uploadLimitIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='uploadLimitNextMonth'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='uploadLimitNextMonthIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMAd'>
<method selector='advertiserName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='advertiserNameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='destinationUrl'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='destinationUrlIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displayFrequency'>
<retval declared_type='double' type='d'/>
</method>
<method selector='displayFrequencyIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='displaySeconds'>
<retval declared_type='int16_t' type='s'/>
</method>
<method selector='displaySecondsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='height'>
<retval declared_type='int16_t' type='s'/>
</method>
<method selector='heightIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='html'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='htmlIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='id'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='idIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='image'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='imageIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageMime'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageMimeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageUrl'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='imageUrlIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithId:width:height:advertiserName:imageUrl:destinationUrl:displaySeconds:score:image:imageMime:html:displayFrequency:openInTrunk:'>
<arg name='id' declared_type='int32_t' type='i' index='0'/>
<arg name='width' declared_type='int16_t' type='s' index='1'/>
<arg name='height' declared_type='int16_t' type='s' index='2'/>
<arg name='advertiserName' declared_type='NSString*' type='@' index='3'/>
<arg name='imageUrl' declared_type='NSString*' type='@' index='4'/>
<arg name='destinationUrl' declared_type='NSString*' type='@' index='5'/>
<arg name='displaySeconds' declared_type='int16_t' type='s' index='6'/>
<arg name='score' declared_type='double' type='d' index='7'/>
<arg name='image' declared_type='NSData*' type='@' index='8'/>
<arg name='imageMime' declared_type='NSString*' type='@' index='9'/>
<arg name='html' declared_type='NSString*' type='@' index='10'/>
<arg name='displayFrequency' declared_type='double' type='d' index='11'/>
<arg name='openInTrunk' declared_type='BOOL' type='B' index='12'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='openInTrunk'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='openInTrunkIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='score'>
<retval declared_type='double' type='d'/>
</method>
<method selector='scoreIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAdvertiserName:'>
<arg name='advertiserName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestinationUrl:'>
<arg name='destinationUrl' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplayFrequency:'>
<arg name='displayFrequency' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDisplaySeconds:'>
<arg name='displaySeconds' declared_type='int16_t' type='s' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg name='height' declared_type='int16_t' type='s' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHtml:'>
<arg name='html' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setId:'>
<arg name='id' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg name='image' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageMime:'>
<arg name='imageMime' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageUrl:'>
<arg name='imageUrl' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpenInTrunk:'>
<arg name='openInTrunk' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setScore:'>
<arg name='score' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg name='width' declared_type='int16_t' type='s' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='width'>
<retval declared_type='int16_t' type='s'/>
</method>
<method selector='widthIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMAdImpressions'>
<method selector='adId'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='adIdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='impressionCount'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='impressionCountIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='impressionTime'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='impressionTimeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithAdId:impressionCount:impressionTime:'>
<arg name='adId' declared_type='int32_t' type='i' index='0'/>
<arg name='impressionCount' declared_type='int32_t' type='i' index='1'/>
<arg name='impressionTime' declared_type='int32_t' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAdId:'>
<arg name='adId' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImpressionCount:'>
<arg name='impressionCount' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImpressionTime:'>
<arg name='impressionTime' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMAdParameters'>
<method selector='clientLanguage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='clientLanguageIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clientProperties'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='clientPropertiesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='impressions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='impressionsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithClientLanguage:impressions:supportHtml:clientProperties:'>
<arg name='clientLanguage' declared_type='NSString*' type='@' index='0'/>
<arg name='impressions' declared_type='NSArray*' type='@' index='1'/>
<arg name='supportHtml' declared_type='BOOL' type='B' index='2'/>
<arg name='clientProperties' declared_type='NSDictionary*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClientLanguage:'>
<arg name='clientLanguage' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClientProperties:'>
<arg name='clientProperties' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImpressions:'>
<arg name='impressions' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSupportHtml:'>
<arg name='supportHtml' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportHtml'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='supportHtmlIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMAuthenticationResult'>
<method selector='authenticationToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='authenticationTokenIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentTime'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='currentTimeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='expiration'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='expirationIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCurrentTime:authenticationToken:expiration:user:publicUserInfo:noteStoreUrl:webApiUrlPrefix:'>
<arg name='currentTime' declared_type='EDAMTimestamp' type='q' index='0'/>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='1'/>
<arg name='expiration' declared_type='EDAMTimestamp' type='q' index='2'/>
<arg name='user' declared_type='EDAMUser*' type='@' index='3'/>
<arg name='publicUserInfo' declared_type='EDAMPublicUserInfo*' type='@' index='4'/>
<arg name='noteStoreUrl' declared_type='NSString*' type='@' index='5'/>
<arg name='webApiUrlPrefix' declared_type='NSString*' type='@' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='noteStoreUrl'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='noteStoreUrlIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='publicUserInfo'>
<retval declared_type='EDAMPublicUserInfo*' type='@'/>
</method>
<method selector='publicUserInfoIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthenticationToken:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentTime:'>
<arg name='currentTime' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpiration:'>
<arg name='expiration' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoteStoreUrl:'>
<arg name='noteStoreUrl' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublicUserInfo:'>
<arg name='publicUserInfo' declared_type='EDAMPublicUserInfo*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUser:'>
<arg name='user' declared_type='EDAMUser*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWebApiUrlPrefix:'>
<arg name='webApiUrlPrefix' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='user'>
<retval declared_type='EDAMUser*' type='@'/>
</method>
<method selector='userIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='webApiUrlPrefix'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='webApiUrlPrefixIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMBootstrapInfo'>
<method selector='initWithProfiles:'>
<arg name='profiles' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='profiles'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='profilesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProfiles:'>
<arg name='profiles' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMBootstrapProfile'>
<method selector='initWithName:settings:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='settings' declared_type='EDAMBootstrapSettings*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='nameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSettings:'>
<arg name='settings' declared_type='EDAMBootstrapSettings*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='settings'>
<retval declared_type='EDAMBootstrapSettings*' type='@'/>
</method>
<method selector='settingsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMBootstrapSettings'>
<method selector='accountEmailDomain'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='accountEmailDomainIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableFacebookSharing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableFacebookSharingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableGiftSubscriptions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableGiftSubscriptionsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableSharedNotebooks'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableSharedNotebooksIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableSingleNoteSharing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableSingleNoteSharingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableSponsoredAccounts'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableSponsoredAccountsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableSupportTickets'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableSupportTicketsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableTwitterSharing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='enableTwitterSharingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithServiceHost:marketingUrl:supportUrl:accountEmailDomain:enableFacebookSharing:enableGiftSubscriptions:enableSupportTickets:enableSharedNotebooks:enableSingleNoteSharing:enableSponsoredAccounts:enableTwitterSharing:'>
<arg name='serviceHost' declared_type='NSString*' type='@' index='0'/>
<arg name='marketingUrl' declared_type='NSString*' type='@' index='1'/>
<arg name='supportUrl' declared_type='NSString*' type='@' index='2'/>
<arg name='accountEmailDomain' declared_type='NSString*' type='@' index='3'/>
<arg name='enableFacebookSharing' declared_type='BOOL' type='B' index='4'/>
<arg name='enableGiftSubscriptions' declared_type='BOOL' type='B' index='5'/>
<arg name='enableSupportTickets' declared_type='BOOL' type='B' index='6'/>
<arg name='enableSharedNotebooks' declared_type='BOOL' type='B' index='7'/>
<arg name='enableSingleNoteSharing' declared_type='BOOL' type='B' index='8'/>
<arg name='enableSponsoredAccounts' declared_type='BOOL' type='B' index='9'/>
<arg name='enableTwitterSharing' declared_type='BOOL' type='B' index='10'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='marketingUrl'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='marketingUrlIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='serviceHost'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='serviceHostIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAccountEmailDomain:'>
<arg name='accountEmailDomain' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableFacebookSharing:'>
<arg name='enableFacebookSharing' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableGiftSubscriptions:'>
<arg name='enableGiftSubscriptions' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableSharedNotebooks:'>
<arg name='enableSharedNotebooks' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableSingleNoteSharing:'>
<arg name='enableSingleNoteSharing' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableSponsoredAccounts:'>
<arg name='enableSponsoredAccounts' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableSupportTickets:'>
<arg name='enableSupportTickets' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEnableTwitterSharing:'>
<arg name='enableTwitterSharing' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMarketingUrl:'>
<arg name='marketingUrl' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceHost:'>
<arg name='serviceHost' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSupportUrl:'>
<arg name='supportUrl' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='supportUrl'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='supportUrlIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMData'>
<method selector='body'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='bodyHash'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='bodyHashIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bodyIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithBodyHash:size:body:'>
<arg name='bodyHash' declared_type='NSData*' type='@' index='0'/>
<arg name='size' declared_type='int32_t' type='i' index='1'/>
<arg name='body' declared_type='NSData*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBody:'>
<arg name='body' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBodyHash:'>
<arg name='bodyHash' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg name='size' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='sizeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMLazyMap'>
<method selector='fullMap'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='fullMapIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithKeysOnly:fullMap:'>
<arg name='keysOnly' declared_type='NSSet*' type='@' index='0'/>
<arg name='fullMap' declared_type='NSDictionary*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='keysOnly'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='keysOnlyIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFullMap:'>
<arg name='fullMap' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKeysOnly:'>
<arg name='keysOnly' declared_type='NSSet*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMLimitsConstants'>
<method selector='EDAM_APPLICATIONDATA_ENTRY_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_APPLICATIONDATA_NAME_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_APPLICATIONDATA_NAME_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_APPLICATIONDATA_NAME_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_APPLICATIONDATA_VALUE_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_APPLICATIONDATA_VALUE_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_APPLICATIONDATA_VALUE_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_ATTRIBUTE_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_ATTRIBUTE_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_ATTRIBUTE_LIST_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_ATTRIBUTE_MAP_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_ATTRIBUTE_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_COMMERCE_DEFAULT_CURRENCY_COUNTRY_CODE' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_COMMERCE_SERVICE_CYBERSOURCE' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_COMMERCE_SERVICE_GIFT' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_COMMERCE_SERVICE_GOOGLE' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_COMMERCE_SERVICE_GROUP' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_COMMERCE_SERVICE_PAYPAL' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_COMMERCE_SERVICE_TRIAL' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_COMMERCE_SERVICE_TRIALPAY' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_CONTENT_CLASS_FOOD_MEAL' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_CONTENT_CLASS_HELLO_ENCOUNTER' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_CONTENT_CLASS_HELLO_PROFILE' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_EMAIL_DOMAIN_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_EMAIL_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_EMAIL_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_EMAIL_LOCAL_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_EMAIL_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_FOOD_APP_CONTENT_CLASS_PREFIX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_GUID_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_GUID_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_GUID_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_HASH_LEN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_HELLO_APP_CONTENT_CLASS_PREFIX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_MIME_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_MIME_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPES' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_AMR' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_DEFAULT' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_GIF' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_INK' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_JPEG' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_MP3' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_MP4_VIDEO' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_PDF' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_PNG' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_MIME_TYPE_WAV' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_NOTEBOOK_NAME_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTEBOOK_NAME_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTEBOOK_NAME_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_NOTEBOOK_SHARED_NOTEBOOK_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTEBOOK_STACK_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTEBOOK_STACK_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTEBOOK_STACK_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_NOTE_CONTENT_CLASS_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_CONTENT_CLASS_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_CONTENT_CLASS_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_NOTE_CONTENT_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_CONTENT_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_RESOURCES_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_SIZE_MAX_FREE' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_SIZE_MAX_PREMIUM' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_TAGS_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_TITLE_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_TITLE_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_NOTE_TITLE_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_PUBLISHING_DESCRIPTION_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_PUBLISHING_DESCRIPTION_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_PUBLISHING_DESCRIPTION_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_PUBLISHING_URI_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_PUBLISHING_URI_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_PUBLISHING_URI_PROHIBITED' class_method='true'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='EDAM_PUBLISHING_URI_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_RESOURCE_SIZE_MAX_FREE' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_RESOURCE_SIZE_MAX_PREMIUM' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_SAVED_SEARCH_NAME_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_SAVED_SEARCH_NAME_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_SAVED_SEARCH_NAME_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_SEARCH_QUERY_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_SEARCH_QUERY_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_SEARCH_QUERY_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_TAG_NAME_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_TAG_NAME_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_TAG_NAME_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_TIMEZONE_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_TIMEZONE_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_TIMEZONE_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_USER_LINKED_NOTEBOOK_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_MAIL_LIMIT_DAILY_FREE' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_MAIL_LIMIT_DAILY_PREMIUM' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_NAME_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_NAME_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_NAME_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_USER_NOTEBOOKS_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_NOTES_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_PASSWORD_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_PASSWORD_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_PASSWORD_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_USER_RECENT_MAILED_ADDRESSES_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_SAVED_SEARCHES_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_TAGS_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_UPLOAD_LIMIT_FREE' class_method='true'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='EDAM_USER_UPLOAD_LIMIT_PREMIUM' class_method='true'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='EDAM_USER_USERNAME_LEN_MAX' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_USERNAME_LEN_MIN' class_method='true'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='EDAM_USER_USERNAME_REGEX' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='EDAMLinkedNotebook'>
<method selector='guid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='guidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithShareName:username:shardId:shareKey:uri:guid:updateSequenceNum:noteStoreUrl:webApiUrlPrefix:'>
<arg name='shareName' declared_type='NSString*' type='@' index='0'/>
<arg name='username' declared_type='NSString*' type='@' index='1'/>
<arg name='shardId' declared_type='NSString*' type='@' index='2'/>
<arg name='shareKey' declared_type='NSString*' type='@' index='3'/>
<arg name='uri' declared_type='NSString*' type='@' index='4'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='5'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='6'/>
<arg name='noteStoreUrl' declared_type='NSString*' type='@' index='7'/>
<arg name='webApiUrlPrefix' declared_type='NSString*' type='@' index='8'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='noteStoreUrl'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='noteStoreUrlIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGuid:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoteStoreUrl:'>
<arg name='noteStoreUrl' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShardId:'>
<arg name='shardId' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShareKey:'>
<arg name='shareKey' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShareName:'>
<arg name='shareName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateSequenceNum:'>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUri:'>
<arg name='uri' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWebApiUrlPrefix:'>
<arg name='webApiUrlPrefix' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shardId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shardIdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shareKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shareKeyIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='shareName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shareNameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateSequenceNum'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateSequenceNumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='uri'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='uriIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='usernameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='webApiUrlPrefix'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='webApiUrlPrefixIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNotFoundException'>
<method selector='identifier'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='identifierIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithIdentifier:key:'>
<arg name='identifier' declared_type='NSString*' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='keyIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIdentifier:'>
<arg name='identifier' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg name='key' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNote'>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='activeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributes'>
<retval declared_type='EDAMNoteAttributes*' type='@'/>
</method>
<method selector='attributesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='content'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='contentHash'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='contentHashIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentLength'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='contentLengthIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='created'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='createdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deleted'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='deletedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='guid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='guidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithGuid:title:content:contentHash:contentLength:created:updated:deleted:active:updateSequenceNum:notebookGuid:tagGuids:resources:attributes:tagNames:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='title' declared_type='NSString*' type='@' index='1'/>
<arg name='content' declared_type='NSString*' type='@' index='2'/>
<arg name='contentHash' declared_type='NSData*' type='@' index='3'/>
<arg name='contentLength' declared_type='int32_t' type='i' index='4'/>
<arg name='created' declared_type='EDAMTimestamp' type='q' index='5'/>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='6'/>
<arg name='deleted' declared_type='EDAMTimestamp' type='q' index='7'/>
<arg name='active' declared_type='BOOL' type='B' index='8'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='9'/>
<arg name='notebookGuid' declared_type='NSString*' type='@' index='10'/>
<arg name='tagGuids' declared_type='NSArray*' type='@' index='11'/>
<arg name='resources' declared_type='NSArray*' type='@' index='12'/>
<arg name='attributes' declared_type='EDAMNoteAttributes*' type='@' index='13'/>
<arg name='tagNames' declared_type='NSArray*' type='@' index='14'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='notebookGuid'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='notebookGuidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resources'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='resourcesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActive:'>
<arg name='active' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributes:'>
<arg name='attributes' declared_type='EDAMNoteAttributes*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContent:'>
<arg name='content' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentHash:'>
<arg name='contentHash' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentLength:'>
<arg name='contentLength' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCreated:'>
<arg name='created' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeleted:'>
<arg name='deleted' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGuid:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotebookGuid:'>
<arg name='notebookGuid' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResources:'>
<arg name='resources' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTagGuids:'>
<arg name='tagGuids' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTagNames:'>
<arg name='tagNames' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg name='title' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateSequenceNum:'>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdated:'>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tagGuids'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tagGuidsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='tagNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tagNamesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateSequenceNum'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateSequenceNumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updated'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='updatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNoteAttributes'>
<method selector='altitude'>
<retval declared_type='double' type='d'/>
</method>
<method selector='altitudeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationData'>
<retval declared_type='EDAMLazyMap*' type='@'/>
</method>
<method selector='applicationDataIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='author'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='authorIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='contentClassIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithSubjectDate:latitude:longitude:altitude:author:source:sourceURL:sourceApplication:shareDate:placeName:contentClass:applicationData:lastEditedBy:'>
<arg name='subjectDate' declared_type='EDAMTimestamp' type='q' index='0'/>
<arg name='latitude' declared_type='double' type='d' index='1'/>
<arg name='longitude' declared_type='double' type='d' index='2'/>
<arg name='altitude' declared_type='double' type='d' index='3'/>
<arg name='author' declared_type='NSString*' type='@' index='4'/>
<arg name='source' declared_type='NSString*' type='@' index='5'/>
<arg name='sourceURL' declared_type='NSString*' type='@' index='6'/>
<arg name='sourceApplication' declared_type='NSString*' type='@' index='7'/>
<arg name='shareDate' declared_type='EDAMTimestamp' type='q' index='8'/>
<arg name='placeName' declared_type='NSString*' type='@' index='9'/>
<arg name='contentClass' declared_type='NSString*' type='@' index='10'/>
<arg name='applicationData' declared_type='EDAMLazyMap*' type='@' index='11'/>
<arg name='lastEditedBy' declared_type='NSString*' type='@' index='12'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lastEditedBy'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='lastEditedByIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='latitude'>
<retval declared_type='double' type='d'/>
</method>
<method selector='latitudeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='longitude'>
<retval declared_type='double' type='d'/>
</method>
<method selector='longitudeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='placeName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='placeNameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAltitude:'>
<arg name='altitude' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setApplicationData:'>
<arg name='applicationData' declared_type='EDAMLazyMap*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthor:'>
<arg name='author' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentClass:'>
<arg name='contentClass' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLastEditedBy:'>
<arg name='lastEditedBy' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLatitude:'>
<arg name='latitude' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLongitude:'>
<arg name='longitude' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPlaceName:'>
<arg name='placeName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShareDate:'>
<arg name='shareDate' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSource:'>
<arg name='source' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceApplication:'>
<arg name='sourceApplication' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceURL:'>
<arg name='sourceURL' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubjectDate:'>
<arg name='subjectDate' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shareDate'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='shareDateIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='source'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sourceApplication'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sourceApplicationIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sourceIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sourceURL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sourceURLIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='subjectDate'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='subjectDateIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNoteCollectionCounts'>
<method selector='initWithNotebookCounts:tagCounts:trashCount:'>
<arg name='notebookCounts' declared_type='NSDictionary*' type='@' index='0'/>
<arg name='tagCounts' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='trashCount' declared_type='int32_t' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='notebookCounts'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='notebookCountsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotebookCounts:'>
<arg name='notebookCounts' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTagCounts:'>
<arg name='tagCounts' declared_type='NSDictionary*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTrashCount:'>
<arg name='trashCount' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tagCounts'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='tagCountsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='trashCount'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='trashCountIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNoteEmailParameters'>
<method selector='ccAddresses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='ccAddressesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='guid'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='guidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithGuid:note:toAddresses:ccAddresses:subject:message:'>
<arg name='guid' declared_type='NSString*' type='@' index='0'/>
<arg name='note' declared_type='EDAMNote*' type='@' index='1'/>
<arg name='toAddresses' declared_type='NSArray*' type='@' index='2'/>
<arg name='ccAddresses' declared_type='NSArray*' type='@' index='3'/>
<arg name='subject' declared_type='NSString*' type='@' index='4'/>
<arg name='message' declared_type='NSString*' type='@' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='message'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='messageIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='note'>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method selector='noteIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCcAddresses:'>
<arg name='ccAddresses' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGuid:'>
<arg name='guid' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessage:'>
<arg name='message' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNote:'>
<arg name='note' declared_type='EDAMNote*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubject:'>
<arg name='subject' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setToAddresses:'>
<arg name='toAddresses' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subject'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='subjectIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='toAddresses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='toAddressesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNoteFilter'>
<method selector='ascending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ascendingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inactive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inactiveIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithOrder:ascending:words:notebookGuid:tagGuids:timeZone:inactive:'>
<arg name='order' declared_type='int32_t' type='i' index='0'/>
<arg name='ascending' declared_type='BOOL' type='B' index='1'/>
<arg name='words' declared_type='NSString*' type='@' index='2'/>
<arg name='notebookGuid' declared_type='EDAMGuid' type='@' index='3'/>
<arg name='tagGuids' declared_type='NSArray*' type='@' index='4'/>
<arg name='timeZone' declared_type='NSString*' type='@' index='5'/>
<arg name='inactive' declared_type='BOOL' type='B' index='6'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='notebookGuid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='notebookGuidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='order'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='orderIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAscending:'>
<arg name='ascending' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInactive:'>
<arg name='inactive' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotebookGuid:'>
<arg name='notebookGuid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrder:'>
<arg name='order' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTagGuids:'>
<arg name='tagGuids' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg name='timeZone' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWords:'>
<arg name='words' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tagGuids'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tagGuidsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timeZoneIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='words'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='wordsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNoteList'>
<method selector='initWithStartIndex:totalNotes:notes:stoppedWords:searchedWords:updateCount:'>
<arg name='startIndex' declared_type='int32_t' type='i' index='0'/>
<arg name='totalNotes' declared_type='int32_t' type='i' index='1'/>
<arg name='notes' declared_type='NSArray*' type='@' index='2'/>
<arg name='stoppedWords' declared_type='NSArray*' type='@' index='3'/>
<arg name='searchedWords' declared_type='NSArray*' type='@' index='4'/>
<arg name='updateCount' declared_type='int32_t' type='i' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='notes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='notesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchedWords'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='searchedWordsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setNotes:'>
<arg name='notes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchedWords:'>
<arg name='searchedWords' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartIndex:'>
<arg name='startIndex' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStoppedWords:'>
<arg name='stoppedWords' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTotalNotes:'>
<arg name='totalNotes' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateCount:'>
<arg name='updateCount' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startIndex'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='startIndexIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stoppedWords'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='stoppedWordsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='totalNotes'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='totalNotesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateCount'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateCountIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNoteMetadata'>
<method selector='attributes'>
<retval declared_type='EDAMNoteAttributes*' type='@'/>
</method>
<method selector='attributesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='contentLength'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='contentLengthIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='created'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='createdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='guid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='guidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithGuid:title:contentLength:created:updated:updateSequenceNum:notebookGuid:tagGuids:attributes:largestResourceMime:largestResourceSize:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='title' declared_type='NSString*' type='@' index='1'/>
<arg name='contentLength' declared_type='int32_t' type='i' index='2'/>
<arg name='created' declared_type='EDAMTimestamp' type='q' index='3'/>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='4'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='5'/>
<arg name='notebookGuid' declared_type='NSString*' type='@' index='6'/>
<arg name='tagGuids' declared_type='NSArray*' type='@' index='7'/>
<arg name='attributes' declared_type='EDAMNoteAttributes*' type='@' index='8'/>
<arg name='largestResourceMime' declared_type='NSString*' type='@' index='9'/>
<arg name='largestResourceSize' declared_type='int32_t' type='i' index='10'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='largestResourceMime'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='largestResourceMimeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='largestResourceSize'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='largestResourceSizeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notebookGuid'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='notebookGuidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributes:'>
<arg name='attributes' declared_type='EDAMNoteAttributes*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContentLength:'>
<arg name='contentLength' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCreated:'>
<arg name='created' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGuid:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLargestResourceMime:'>
<arg name='largestResourceMime' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLargestResourceSize:'>
<arg name='largestResourceSize' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotebookGuid:'>
<arg name='notebookGuid' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTagGuids:'>
<arg name='tagGuids' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg name='title' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateSequenceNum:'>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdated:'>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tagGuids'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tagGuidsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateSequenceNum'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateSequenceNumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updated'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='updatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNoteStoreClient'>
<method selector='initWithInProtocol:outProtocol:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<arg name='outProtocol' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithProtocol:'>
<arg name='protocol' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='EDAMNoteStoreProcessor'>
<method selector='initWithNoteStore:'>
<arg name='service' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='service'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='EDAMNoteVersionId'>
<method selector='initWithUpdateSequenceNum:updated:saved:title:'>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='0'/>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='1'/>
<arg name='saved' declared_type='EDAMTimestamp' type='q' index='2'/>
<arg name='title' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='saved'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='savedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSaved:'>
<arg name='saved' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg name='title' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateSequenceNum:'>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdated:'>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateSequenceNum'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateSequenceNumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updated'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='updatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNotebook'>
<method selector='defaultNotebook'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='defaultNotebookIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='guid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='guidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithGuid:name:updateSequenceNum:defaultNotebook:serviceCreated:serviceUpdated:publishing:published:stack:sharedNotebookIds:sharedNotebooks:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='2'/>
<arg name='defaultNotebook' declared_type='BOOL' type='B' index='3'/>
<arg name='serviceCreated' declared_type='EDAMTimestamp' type='q' index='4'/>
<arg name='serviceUpdated' declared_type='EDAMTimestamp' type='q' index='5'/>
<arg name='publishing' declared_type='EDAMPublishing*' type='@' index='6'/>
<arg name='published' declared_type='BOOL' type='B' index='7'/>
<arg name='stack' declared_type='NSString*' type='@' index='8'/>
<arg name='sharedNotebookIds' declared_type='NSArray*' type='@' index='9'/>
<arg name='sharedNotebooks' declared_type='NSArray*' type='@' index='10'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='nameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='published'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='publishedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='publishing'>
<retval declared_type='EDAMPublishing*' type='@'/>
</method>
<method selector='publishingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='serviceCreated'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='serviceCreatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='serviceUpdated'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='serviceUpdatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setDefaultNotebook:'>
<arg name='defaultNotebook' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGuid:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublished:'>
<arg name='published' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublishing:'>
<arg name='publishing' declared_type='EDAMPublishing*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceCreated:'>
<arg name='serviceCreated' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceUpdated:'>
<arg name='serviceUpdated' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSharedNotebookIds:'>
<arg name='sharedNotebookIds' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSharedNotebooks:'>
<arg name='sharedNotebooks' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStack:'>
<arg name='stack' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateSequenceNum:'>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedNotebookIds'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sharedNotebookIdsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sharedNotebooks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sharedNotebooksIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stack'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='stackIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateSequenceNum'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateSequenceNumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNotesMetadataList'>
<method selector='initWithStartIndex:totalNotes:notes:stoppedWords:searchedWords:updateCount:'>
<arg name='startIndex' declared_type='int32_t' type='i' index='0'/>
<arg name='totalNotes' declared_type='int32_t' type='i' index='1'/>
<arg name='notes' declared_type='NSArray*' type='@' index='2'/>
<arg name='stoppedWords' declared_type='NSArray*' type='@' index='3'/>
<arg name='searchedWords' declared_type='NSArray*' type='@' index='4'/>
<arg name='updateCount' declared_type='int32_t' type='i' index='5'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='notes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='notesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchedWords'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='searchedWordsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setNotes:'>
<arg name='notes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearchedWords:'>
<arg name='searchedWords' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartIndex:'>
<arg name='startIndex' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStoppedWords:'>
<arg name='stoppedWords' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTotalNotes:'>
<arg name='totalNotes' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateCount:'>
<arg name='updateCount' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startIndex'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='startIndexIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='stoppedWords'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='stoppedWordsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='totalNotes'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='totalNotesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateCount'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateCountIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMNotesMetadataResultSpec'>
<method selector='includeAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeAttributesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeContentLength'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeContentLengthIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeCreated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeCreatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeLargestResourceMime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeLargestResourceMimeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeLargestResourceSize'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeLargestResourceSizeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNotebookGuid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNotebookGuidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeTagGuids'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeTagGuidsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeTitle'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeTitleIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeUpdateSequenceNum'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeUpdateSequenceNumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeUpdated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeUpdatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithIncludeTitle:includeContentLength:includeCreated:includeUpdated:includeUpdateSequenceNum:includeNotebookGuid:includeTagGuids:includeAttributes:includeLargestResourceMime:includeLargestResourceSize:'>
<arg name='includeTitle' declared_type='BOOL' type='B' index='0'/>
<arg name='includeContentLength' declared_type='BOOL' type='B' index='1'/>
<arg name='includeCreated' declared_type='BOOL' type='B' index='2'/>
<arg name='includeUpdated' declared_type='BOOL' type='B' index='3'/>
<arg name='includeUpdateSequenceNum' declared_type='BOOL' type='B' index='4'/>
<arg name='includeNotebookGuid' declared_type='BOOL' type='B' index='5'/>
<arg name='includeTagGuids' declared_type='BOOL' type='B' index='6'/>
<arg name='includeAttributes' declared_type='BOOL' type='B' index='7'/>
<arg name='includeLargestResourceMime' declared_type='BOOL' type='B' index='8'/>
<arg name='includeLargestResourceSize' declared_type='BOOL' type='B' index='9'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeAttributes:'>
<arg name='includeAttributes' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeContentLength:'>
<arg name='includeContentLength' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeCreated:'>
<arg name='includeCreated' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeLargestResourceMime:'>
<arg name='includeLargestResourceMime' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeLargestResourceSize:'>
<arg name='includeLargestResourceSize' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeNotebookGuid:'>
<arg name='includeNotebookGuid' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTagGuids:'>
<arg name='includeTagGuids' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTitle:'>
<arg name='includeTitle' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeUpdateSequenceNum:'>
<arg name='includeUpdateSequenceNum' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeUpdated:'>
<arg name='includeUpdated' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMPremiumInfo'>
<method selector='canPurchaseUploadAllowance'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='canPurchaseUploadAllowanceIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentTime'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='currentTimeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCurrentTime:premium:premiumRecurring:premiumExpirationDate:premiumExtendable:premiumPending:premiumCancellationPending:canPurchaseUploadAllowance:sponsoredGroupName:sponsoredGroupRole:'>
<arg name='currentTime' declared_type='EDAMTimestamp' type='q' index='0'/>
<arg name='premium' declared_type='BOOL' type='B' index='1'/>
<arg name='premiumRecurring' declared_type='BOOL' type='B' index='2'/>
<arg name='premiumExpirationDate' declared_type='EDAMTimestamp' type='q' index='3'/>
<arg name='premiumExtendable' declared_type='BOOL' type='B' index='4'/>
<arg name='premiumPending' declared_type='BOOL' type='B' index='5'/>
<arg name='premiumCancellationPending' declared_type='BOOL' type='B' index='6'/>
<arg name='canPurchaseUploadAllowance' declared_type='BOOL' type='B' index='7'/>
<arg name='sponsoredGroupName' declared_type='NSString*' type='@' index='8'/>
<arg name='sponsoredGroupRole' declared_type='int' type='i' index='9'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='premium'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumCancellationPending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumCancellationPendingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumExpirationDate'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='premiumExpirationDateIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumExtendable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumExtendableIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumPending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumPendingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumRecurring'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='premiumRecurringIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCanPurchaseUploadAllowance:'>
<arg name='canPurchaseUploadAllowance' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentTime:'>
<arg name='currentTime' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremium:'>
<arg name='premium' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumCancellationPending:'>
<arg name='premiumCancellationPending' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumExpirationDate:'>
<arg name='premiumExpirationDate' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumExtendable:'>
<arg name='premiumExtendable' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumPending:'>
<arg name='premiumPending' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPremiumRecurring:'>
<arg name='premiumRecurring' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSponsoredGroupName:'>
<arg name='sponsoredGroupName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSponsoredGroupRole:'>
<arg name='sponsoredGroupRole' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sponsoredGroupName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sponsoredGroupNameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sponsoredGroupRole'>
<retval declared_type='int' type='i'/>
</method>
<method selector='sponsoredGroupRoleIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMPublicUserInfo'>
<method selector='initWithUserId:shardId:privilege:username:noteStoreUrl:'>
<arg name='userId' declared_type='EDAMUserID' type='i' index='0'/>
<arg name='shardId' declared_type='NSString*' type='@' index='1'/>
<arg name='privilege' declared_type='int' type='i' index='2'/>
<arg name='username' declared_type='NSString*' type='@' index='3'/>
<arg name='noteStoreUrl' declared_type='NSString*' type='@' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='noteStoreUrl'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='noteStoreUrlIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='privilege'>
<retval declared_type='int' type='i'/>
</method>
<method selector='privilegeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoteStoreUrl:'>
<arg name='noteStoreUrl' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrivilege:'>
<arg name='privilege' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShardId:'>
<arg name='shardId' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserId:'>
<arg name='userId' declared_type='EDAMUserID' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shardId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shardIdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userId'>
<retval declared_type='EDAMUserID' type='i'/>
</method>
<method selector='userIdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='usernameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMPublishing'>
<method selector='ascending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='ascendingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithUri:order:ascending:publicDescription:'>
<arg name='uri' declared_type='NSString*' type='@' index='0'/>
<arg name='order' declared_type='int' type='i' index='1'/>
<arg name='ascending' declared_type='BOOL' type='B' index='2'/>
<arg name='publicDescription' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='order'>
<retval declared_type='int' type='i'/>
</method>
<method selector='orderIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='publicDescription'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='publicDescriptionIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAscending:'>
<arg name='ascending' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOrder:'>
<arg name='order' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPublicDescription:'>
<arg name='publicDescription' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUri:'>
<arg name='uri' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='uri'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='uriIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMResource'>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='activeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='alternateData'>
<retval declared_type='EDAMData*' type='@'/>
</method>
<method selector='alternateDataIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributes'>
<retval declared_type='EDAMResourceAttributes*' type='@'/>
</method>
<method selector='attributesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='data'>
<retval declared_type='EDAMData*' type='@'/>
</method>
<method selector='dataIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='duration'>
<retval declared_type='int16_t' type='s'/>
</method>
<method selector='durationIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='guid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='guidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='height'>
<retval declared_type='int16_t' type='s'/>
</method>
<method selector='heightIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithGuid:noteGuid:data:mime:width:height:duration:active:recognition:attributes:updateSequenceNum:alternateData:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='data' declared_type='EDAMData*' type='@' index='2'/>
<arg name='mime' declared_type='NSString*' type='@' index='3'/>
<arg name='width' declared_type='int16_t' type='s' index='4'/>
<arg name='height' declared_type='int16_t' type='s' index='5'/>
<arg name='duration' declared_type='int16_t' type='s' index='6'/>
<arg name='active' declared_type='BOOL' type='B' index='7'/>
<arg name='recognition' declared_type='EDAMData*' type='@' index='8'/>
<arg name='attributes' declared_type='EDAMResourceAttributes*' type='@' index='9'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='10'/>
<arg name='alternateData' declared_type='EDAMData*' type='@' index='11'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='mime'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='mimeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='noteGuid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='noteGuidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='recognition'>
<retval declared_type='EDAMData*' type='@'/>
</method>
<method selector='recognitionIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setActive:'>
<arg name='active' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAlternateData:'>
<arg name='alternateData' declared_type='EDAMData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributes:'>
<arg name='attributes' declared_type='EDAMResourceAttributes*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setData:'>
<arg name='data' declared_type='EDAMData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDuration:'>
<arg name='duration' declared_type='int16_t' type='s' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGuid:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg name='height' declared_type='int16_t' type='s' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMime:'>
<arg name='mime' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoteGuid:'>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecognition:'>
<arg name='recognition' declared_type='EDAMData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateSequenceNum:'>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg name='width' declared_type='int16_t' type='s' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateSequenceNum'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateSequenceNumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='width'>
<retval declared_type='int16_t' type='s'/>
</method>
<method selector='widthIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMResourceAttributes'>
<method selector='altitude'>
<retval declared_type='double' type='d'/>
</method>
<method selector='altitudeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='applicationData'>
<retval declared_type='EDAMLazyMap*' type='@'/>
</method>
<method selector='applicationDataIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attachment'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attachmentIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cameraMake'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cameraMakeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cameraModel'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='cameraModelIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clientWillIndex'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clientWillIndexIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fileName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fileNameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithSourceURL:timestamp:latitude:longitude:altitude:cameraMake:cameraModel:clientWillIndex:recoType:fileName:attachment:applicationData:'>
<arg name='sourceURL' declared_type='NSString*' type='@' index='0'/>
<arg name='timestamp' declared_type='EDAMTimestamp' type='q' index='1'/>
<arg name='latitude' declared_type='double' type='d' index='2'/>
<arg name='longitude' declared_type='double' type='d' index='3'/>
<arg name='altitude' declared_type='double' type='d' index='4'/>
<arg name='cameraMake' declared_type='NSString*' type='@' index='5'/>
<arg name='cameraModel' declared_type='NSString*' type='@' index='6'/>
<arg name='clientWillIndex' declared_type='BOOL' type='B' index='7'/>
<arg name='recoType' declared_type='NSString*' type='@' index='8'/>
<arg name='fileName' declared_type='NSString*' type='@' index='9'/>
<arg name='attachment' declared_type='BOOL' type='B' index='10'/>
<arg name='applicationData' declared_type='EDAMLazyMap*' type='@' index='11'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='latitude'>
<retval declared_type='double' type='d'/>
</method>
<method selector='latitudeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='longitude'>
<retval declared_type='double' type='d'/>
</method>
<method selector='longitudeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='recoType'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='recoTypeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAltitude:'>
<arg name='altitude' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setApplicationData:'>
<arg name='applicationData' declared_type='EDAMLazyMap*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttachment:'>
<arg name='attachment' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraMake:'>
<arg name='cameraMake' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCameraModel:'>
<arg name='cameraModel' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClientWillIndex:'>
<arg name='clientWillIndex' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFileName:'>
<arg name='fileName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLatitude:'>
<arg name='latitude' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLongitude:'>
<arg name='longitude' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecoType:'>
<arg name='recoType' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSourceURL:'>
<arg name='sourceURL' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimestamp:'>
<arg name='timestamp' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sourceURL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sourceURLIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='timestamp'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='timestampIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMSavedSearch'>
<method selector='format'>
<retval declared_type='int' type='i'/>
</method>
<method selector='formatIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='guid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='guidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithGuid:name:query:format:updateSequenceNum:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='query' declared_type='NSString*' type='@' index='2'/>
<arg name='format' declared_type='int' type='i' index='3'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='4'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='nameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='query'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='queryIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFormat:'>
<arg name='format' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGuid:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQuery:'>
<arg name='query' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateSequenceNum:'>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateSequenceNum'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateSequenceNumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMSharedNotebook'>
<method selector='email'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='emailIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='id'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='idIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithId:userId:notebookGuid:email:notebookModifiable:requireLogin:serviceCreated:serviceUpdated:shareKey:username:'>
<arg name='id' declared_type='int64_t' type='q' index='0'/>
<arg name='userId' declared_type='int32_t' type='i' index='1'/>
<arg name='notebookGuid' declared_type='NSString*' type='@' index='2'/>
<arg name='email' declared_type='NSString*' type='@' index='3'/>
<arg name='notebookModifiable' declared_type='BOOL' type='B' index='4'/>
<arg name='requireLogin' declared_type='BOOL' type='B' index='5'/>
<arg name='serviceCreated' declared_type='EDAMTimestamp' type='q' index='6'/>
<arg name='serviceUpdated' declared_type='EDAMTimestamp' type='q' index='7'/>
<arg name='shareKey' declared_type='NSString*' type='@' index='8'/>
<arg name='username' declared_type='NSString*' type='@' index='9'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='notebookGuid'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='notebookGuidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notebookModifiable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notebookModifiableIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requireLogin'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='requireLoginIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='serviceCreated'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='serviceCreatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='serviceUpdated'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='serviceUpdatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEmail:'>
<arg name='email' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setId:'>
<arg name='id' declared_type='int64_t' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotebookGuid:'>
<arg name='notebookGuid' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotebookModifiable:'>
<arg name='notebookModifiable' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequireLogin:'>
<arg name='requireLogin' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceCreated:'>
<arg name='serviceCreated' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setServiceUpdated:'>
<arg name='serviceUpdated' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShareKey:'>
<arg name='shareKey' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserId:'>
<arg name='userId' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shareKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shareKeyIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userId'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='userIdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='usernameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMSyncChunk'>
<method selector='chunkHighUSN'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='chunkHighUSNIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='currentTime'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='currentTimeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='expungedLinkedNotebooks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='expungedLinkedNotebooksIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='expungedNotebooks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='expungedNotebooksIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='expungedNotes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='expungedNotesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='expungedSearches'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='expungedSearchesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='expungedTags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='expungedTagsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCurrentTime:chunkHighUSN:updateCount:notes:notebooks:tags:searches:resources:expungedNotes:expungedNotebooks:expungedTags:expungedSearches:linkedNotebooks:expungedLinkedNotebooks:'>
<arg name='currentTime' declared_type='EDAMTimestamp' type='q' index='0'/>
<arg name='chunkHighUSN' declared_type='int32_t' type='i' index='1'/>
<arg name='updateCount' declared_type='int32_t' type='i' index='2'/>
<arg name='notes' declared_type='NSArray*' type='@' index='3'/>
<arg name='notebooks' declared_type='NSArray*' type='@' index='4'/>
<arg name='tags' declared_type='NSArray*' type='@' index='5'/>
<arg name='searches' declared_type='NSArray*' type='@' index='6'/>
<arg name='resources' declared_type='NSArray*' type='@' index='7'/>
<arg name='expungedNotes' declared_type='NSArray*' type='@' index='8'/>
<arg name='expungedNotebooks' declared_type='NSArray*' type='@' index='9'/>
<arg name='expungedTags' declared_type='NSArray*' type='@' index='10'/>
<arg name='expungedSearches' declared_type='NSArray*' type='@' index='11'/>
<arg name='linkedNotebooks' declared_type='NSArray*' type='@' index='12'/>
<arg name='expungedLinkedNotebooks' declared_type='NSArray*' type='@' index='13'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='linkedNotebooks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='linkedNotebooksIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notebooks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='notebooksIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='notes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='notesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='resources'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='resourcesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='searches'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='searchesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setChunkHighUSN:'>
<arg name='chunkHighUSN' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentTime:'>
<arg name='currentTime' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpungedLinkedNotebooks:'>
<arg name='expungedLinkedNotebooks' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpungedNotebooks:'>
<arg name='expungedNotebooks' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpungedNotes:'>
<arg name='expungedNotes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpungedSearches:'>
<arg name='expungedSearches' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpungedTags:'>
<arg name='expungedTags' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLinkedNotebooks:'>
<arg name='linkedNotebooks' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotebooks:'>
<arg name='notebooks' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNotes:'>
<arg name='notes' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResources:'>
<arg name='resources' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSearches:'>
<arg name='searches' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTags:'>
<arg name='tags' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateCount:'>
<arg name='updateCount' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='tags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tagsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updateCount'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateCountIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMSyncChunkFilter'>
<method selector='includeExpunged'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeExpungedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeLinkedNotebooks'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeLinkedNotebooksIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNoteApplicationDataFullMap'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNoteApplicationDataFullMapIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNoteAttributes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNoteAttributesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNoteResourceApplicationDataFullMap'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNoteResourceApplicationDataFullMapIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNoteResources'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNoteResourcesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNotebooks'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNotebooksIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNotes'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeNotesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeResourceApplicationDataFullMap'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeResourceApplicationDataFullMapIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeResources'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeResourcesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeSearches'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeSearchesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeTags'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='includeTagsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithIncludeNotes:includeNoteResources:includeNoteAttributes:includeNotebooks:includeTags:includeSearches:includeResources:includeLinkedNotebooks:includeExpunged:includeNoteApplicationDataFullMap:includeResourceApplicationDataFullMap:includeNoteResourceApplicationDataFullMap:requireNoteContentClass:'>
<arg name='includeNotes' declared_type='BOOL' type='B' index='0'/>
<arg name='includeNoteResources' declared_type='BOOL' type='B' index='1'/>
<arg name='includeNoteAttributes' declared_type='BOOL' type='B' index='2'/>
<arg name='includeNotebooks' declared_type='BOOL' type='B' index='3'/>
<arg name='includeTags' declared_type='BOOL' type='B' index='4'/>
<arg name='includeSearches' declared_type='BOOL' type='B' index='5'/>
<arg name='includeResources' declared_type='BOOL' type='B' index='6'/>
<arg name='includeLinkedNotebooks' declared_type='BOOL' type='B' index='7'/>
<arg name='includeExpunged' declared_type='BOOL' type='B' index='8'/>
<arg name='includeNoteApplicationDataFullMap' declared_type='BOOL' type='B' index='9'/>
<arg name='includeResourceApplicationDataFullMap' declared_type='BOOL' type='B' index='10'/>
<arg name='includeNoteResourceApplicationDataFullMap' declared_type='BOOL' type='B' index='11'/>
<arg name='requireNoteContentClass' declared_type='NSString*' type='@' index='12'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requireNoteContentClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='requireNoteContentClassIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setIncludeExpunged:'>
<arg name='includeExpunged' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeLinkedNotebooks:'>
<arg name='includeLinkedNotebooks' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeNoteApplicationDataFullMap:'>
<arg name='includeNoteApplicationDataFullMap' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeNoteAttributes:'>
<arg name='includeNoteAttributes' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeNoteResourceApplicationDataFullMap:'>
<arg name='includeNoteResourceApplicationDataFullMap' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeNoteResources:'>
<arg name='includeNoteResources' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeNotebooks:'>
<arg name='includeNotebooks' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeNotes:'>
<arg name='includeNotes' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeResourceApplicationDataFullMap:'>
<arg name='includeResourceApplicationDataFullMap' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeResources:'>
<arg name='includeResources' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeSearches:'>
<arg name='includeSearches' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncludeTags:'>
<arg name='includeTags' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequireNoteContentClass:'>
<arg name='requireNoteContentClass' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMSyncState'>
<method selector='currentTime'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='currentTimeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='fullSyncBefore'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='fullSyncBeforeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithCurrentTime:fullSyncBefore:updateCount:uploaded:'>
<arg name='currentTime' declared_type='EDAMTimestamp' type='q' index='0'/>
<arg name='fullSyncBefore' declared_type='EDAMTimestamp' type='q' index='1'/>
<arg name='updateCount' declared_type='int32_t' type='i' index='2'/>
<arg name='uploaded' declared_type='int64_t' type='q' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCurrentTime:'>
<arg name='currentTime' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFullSyncBefore:'>
<arg name='fullSyncBefore' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateCount:'>
<arg name='updateCount' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploaded:'>
<arg name='uploaded' declared_type='int64_t' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateCount'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateCountIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='uploaded'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='uploadedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMSystemException'>
<method selector='errorCode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='errorCodeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithErrorCode:message:'>
<arg name='errorCode' declared_type='int' type='i' index='0'/>
<arg name='message' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='message'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='messageIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setErrorCode:'>
<arg name='errorCode' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessage:'>
<arg name='message' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMTag'>
<method selector='guid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='guidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithGuid:name:parentGuid:updateSequenceNum:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='name' declared_type='NSString*' type='@' index='1'/>
<arg name='parentGuid' declared_type='EDAMGuid' type='@' index='2'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='nameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='parentGuid'>
<retval declared_type='EDAMGuid' type='@'/>
</method>
<method selector='parentGuidIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGuid:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentGuid:'>
<arg name='parentGuid' declared_type='EDAMGuid' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdateSequenceNum:'>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateSequenceNum'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateSequenceNumIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMTypesConstants'>
<method selector='EDAM_NOTE_SOURCE_MAIL_CLIP' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_NOTE_SOURCE_MAIL_SMTP_GATEWAY' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='EDAM_NOTE_SOURCE_WEB_CLIP' class_method='true'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='EDAMUser'>
<method selector='accounting'>
<retval declared_type='EDAMAccounting*' type='@'/>
</method>
<method selector='accountingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='active'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='activeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='attributes'>
<retval declared_type='EDAMUserAttributes*' type='@'/>
</method>
<method selector='attributesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='created'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='createdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deleted'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='deletedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='email'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='emailIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='id'>
<retval declared_type='EDAMUserID' type='i'/>
</method>
<method selector='idIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithId:username:email:name:timezone:privilege:created:updated:deleted:active:shardId:attributes:accounting:'>
<arg name='id' declared_type='EDAMUserID' type='i' index='0'/>
<arg name='username' declared_type='NSString*' type='@' index='1'/>
<arg name='email' declared_type='NSString*' type='@' index='2'/>
<arg name='name' declared_type='NSString*' type='@' index='3'/>
<arg name='timezone' declared_type='NSString*' type='@' index='4'/>
<arg name='privilege' declared_type='int' type='i' index='5'/>
<arg name='created' declared_type='EDAMTimestamp' type='q' index='6'/>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='7'/>
<arg name='deleted' declared_type='EDAMTimestamp' type='q' index='8'/>
<arg name='active' declared_type='BOOL' type='B' index='9'/>
<arg name='shardId' declared_type='NSString*' type='@' index='10'/>
<arg name='attributes' declared_type='EDAMUserAttributes*' type='@' index='11'/>
<arg name='accounting' declared_type='EDAMAccounting*' type='@' index='12'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='nameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='privilege'>
<retval declared_type='int' type='i'/>
</method>
<method selector='privilegeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAccounting:'>
<arg name='accounting' declared_type='EDAMAccounting*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActive:'>
<arg name='active' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributes:'>
<arg name='attributes' declared_type='EDAMUserAttributes*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCreated:'>
<arg name='created' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDeleted:'>
<arg name='deleted' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmail:'>
<arg name='email' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setId:'>
<arg name='id' declared_type='EDAMUserID' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPrivilege:'>
<arg name='privilege' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShardId:'>
<arg name='shardId' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimezone:'>
<arg name='timezone' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUpdated:'>
<arg name='updated' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUsername:'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shardId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='shardIdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='timezone'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='timezoneIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='updated'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='updatedIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='username'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='usernameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMUserAttributes'>
<method selector='businessAddress'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='businessAddressIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clipFullPage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clipFullPageIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='comments'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='commentsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='customerProfileId'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='customerProfileIdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dailyEmailLimit'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='dailyEmailLimitIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='dateAgreedToTermsOfService'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='dateAgreedToTermsOfServiceIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='defaultLatitude'>
<retval declared_type='double' type='d'/>
</method>
<method selector='defaultLatitudeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='defaultLocationName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='defaultLocationNameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='defaultLongitude'>
<retval declared_type='double' type='d'/>
</method>
<method selector='defaultLongitudeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='educationalDiscount'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='educationalDiscountIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='emailOptOutDate'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='emailOptOutDateIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='groupName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='groupNameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hideSponsorBilling'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='hideSponsorBillingIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='incomingEmailAddress'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='incomingEmailAddressIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithDefaultLocationName:defaultLatitude:defaultLongitude:preactivation:viewedPromotions:incomingEmailAddress:recentMailedAddresses:comments:dateAgreedToTermsOfService:maxReferrals:referralCount:refererCode:sentEmailDate:sentEmailCount:dailyEmailLimit:emailOptOutDate:partnerEmailOptInDate:preferredLanguage:preferredCountry:clipFullPage:twitterUserName:twitterId:groupName:recognitionLanguage:customerProfileId:referralProof:educationalDiscount:businessAddress:hideSponsorBilling:'>
<arg name='defaultLocationName' declared_type='NSString*' type='@' index='0'/>
<arg name='defaultLatitude' declared_type='double' type='d' index='1'/>
<arg name='defaultLongitude' declared_type='double' type='d' index='2'/>
<arg name='preactivation' declared_type='BOOL' type='B' index='3'/>
<arg name='viewedPromotions' declared_type='NSArray*' type='@' index='4'/>
<arg name='incomingEmailAddress' declared_type='NSString*' type='@' index='5'/>
<arg name='recentMailedAddresses' declared_type='NSArray*' type='@' index='6'/>
<arg name='comments' declared_type='NSString*' type='@' index='7'/>
<arg name='dateAgreedToTermsOfService' declared_type='EDAMTimestamp' type='q' index='8'/>
<arg name='maxReferrals' declared_type='int32_t' type='i' index='9'/>
<arg name='referralCount' declared_type='int32_t' type='i' index='10'/>
<arg name='refererCode' declared_type='NSString*' type='@' index='11'/>
<arg name='sentEmailDate' declared_type='EDAMTimestamp' type='q' index='12'/>
<arg name='sentEmailCount' declared_type='int32_t' type='i' index='13'/>
<arg name='dailyEmailLimit' declared_type='int32_t' type='i' index='14'/>
<arg name='emailOptOutDate' declared_type='EDAMTimestamp' type='q' index='15'/>
<arg name='partnerEmailOptInDate' declared_type='EDAMTimestamp' type='q' index='16'/>
<arg name='preferredLanguage' declared_type='NSString*' type='@' index='17'/>
<arg name='preferredCountry' declared_type='NSString*' type='@' index='18'/>
<arg name='clipFullPage' declared_type='BOOL' type='B' index='19'/>
<arg name='twitterUserName' declared_type='NSString*' type='@' index='20'/>
<arg name='twitterId' declared_type='NSString*' type='@' index='21'/>
<arg name='groupName' declared_type='NSString*' type='@' index='22'/>
<arg name='recognitionLanguage' declared_type='NSString*' type='@' index='23'/>
<arg name='customerProfileId' declared_type='int64_t' type='q' index='24'/>
<arg name='referralProof' declared_type='NSString*' type='@' index='25'/>
<arg name='educationalDiscount' declared_type='BOOL' type='B' index='26'/>
<arg name='businessAddress' declared_type='NSString*' type='@' index='27'/>
<arg name='hideSponsorBilling' declared_type='BOOL' type='B' index='28'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maxReferrals'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='maxReferralsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='partnerEmailOptInDate'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='partnerEmailOptInDateIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preactivation'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preactivationIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredCountry'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='preferredCountryIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='preferredLanguage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='preferredLanguageIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='recentMailedAddresses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='recentMailedAddressesIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='recognitionLanguage'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='recognitionLanguageIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='refererCode'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='refererCodeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='referralCount'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='referralCountIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='referralProof'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='referralProofIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sentEmailCount'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='sentEmailCountIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='sentEmailDate'>
<retval declared_type='EDAMTimestamp' type='q'/>
</method>
<method selector='sentEmailDateIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusinessAddress:'>
<arg name='businessAddress' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClipFullPage:'>
<arg name='clipFullPage' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setComments:'>
<arg name='comments' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomerProfileId:'>
<arg name='customerProfileId' declared_type='int64_t' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDailyEmailLimit:'>
<arg name='dailyEmailLimit' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateAgreedToTermsOfService:'>
<arg name='dateAgreedToTermsOfService' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultLatitude:'>
<arg name='defaultLatitude' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultLocationName:'>
<arg name='defaultLocationName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultLongitude:'>
<arg name='defaultLongitude' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEducationalDiscount:'>
<arg name='educationalDiscount' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEmailOptOutDate:'>
<arg name='emailOptOutDate' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupName:'>
<arg name='groupName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHideSponsorBilling:'>
<arg name='hideSponsorBilling' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setIncomingEmailAddress:'>
<arg name='incomingEmailAddress' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxReferrals:'>
<arg name='maxReferrals' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPartnerEmailOptInDate:'>
<arg name='partnerEmailOptInDate' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreactivation:'>
<arg name='preactivation' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredCountry:'>
<arg name='preferredCountry' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPreferredLanguage:'>
<arg name='preferredLanguage' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecentMailedAddresses:'>
<arg name='recentMailedAddresses' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRecognitionLanguage:'>
<arg name='recognitionLanguage' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRefererCode:'>
<arg name='refererCode' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferralCount:'>
<arg name='referralCount' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReferralProof:'>
<arg name='referralProof' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSentEmailCount:'>
<arg name='sentEmailCount' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSentEmailDate:'>
<arg name='sentEmailDate' declared_type='EDAMTimestamp' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTwitterId:'>
<arg name='twitterId' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTwitterUserName:'>
<arg name='twitterUserName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewedPromotions:'>
<arg name='viewedPromotions' declared_type='NSArray*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='twitterId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='twitterIdIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='twitterUserName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='twitterUserNameIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='viewedPromotions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='viewedPromotionsIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMUserException'>
<method selector='errorCode'>
<retval declared_type='int' type='i'/>
</method>
<method selector='errorCodeIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithErrorCode:parameter:'>
<arg name='errorCode' declared_type='int' type='i' index='0'/>
<arg name='parameter' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='parameter'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='parameterIsSet'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='read:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setErrorCode:'>
<arg name='errorCode' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParameter:'>
<arg name='parameter' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='write:'>
<arg name='outProtocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EDAMUserStoreClient'>
<method selector='initWithInProtocol:outProtocol:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<arg name='outProtocol' declared_type='id' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithProtocol:'>
<arg name='protocol' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='EDAMUserStoreConstants'>
<method selector='EDAM_VERSION_MAJOR' class_method='true'>
<retval declared_type='int16_t' type='s'/>
</method>
<method selector='EDAM_VERSION_MINOR' class_method='true'>
<retval declared_type='int16_t' type='s'/>
</method>
</class>
<class name='EDAMUserStoreProcessor'>
<method selector='initWithUserStore:'>
<arg name='service' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='service'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='ENAPI'>
<method selector='errorFromNSException:'>
<arg name='exception' declared_type='NSException*' type='@' index='0'/>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithSession:'>
<arg name='session' declared_type='EvernoteSession*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invokeAsyncBoolBlock:success:failure:'>
<arg name='block' function_pointer='true' declared_type='BOOL (^)()' type='@?' index='0'>
<retval declared_type='BOOL' type='B'/>
</arg>
<arg name='success' function_pointer='true' declared_type='void (^)(BOOL)' type='@?' index='1'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='invokeAsyncIdBlock:success:failure:'>
<arg name='block' function_pointer='true' declared_type='id (^)()' type='@?' index='0'>
<retval declared_type='id' type='@'/>
</arg>
<arg name='success' function_pointer='true' declared_type='void (^)(id)' type='@?' index='1'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='invokeAsyncInt32Block:success:failure:'>
<arg name='block' function_pointer='true' declared_type='int32_t (^)()' type='@?' index='0'>
<retval declared_type='int32_t' type='i'/>
</arg>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='invokeAsyncVoidBlock:success:failure:'>
<arg name='block' function_pointer='true' declared_type='void (^)()' type='@?' index='0'>
<retval declared_type='void' type='v'/>
</arg>
<arg name='success' function_pointer='true' declared_type='void (^)()' type='@?' index='1'>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='noteStore'>
<retval declared_type='EDAMNoteStoreClient*' type='@'/>
</method>
<method selector='session'>
<retval declared_type='EvernoteSession*' type='@'/>
</method>
<method selector='setSession:'>
<arg name='session' declared_type='EvernoteSession*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='userStore'>
<retval declared_type='EDAMUserStoreClient*' type='@'/>
</method>
</class>
<class name='ENCredentialStore'>
<method selector='addCredentials:'>
<arg name='credentials' declared_type='ENCredentials*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearAllCredentials'>
<retval declared_type='void' type='v'/>
</method>
<method selector='credentialsForHost:'>
<arg name='host' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='ENCredentials*' type='@'/>
</method>
<method selector='delete'>
<retval declared_type='void' type='v'/>
</method>
<method selector='load' class_method='true'>
<retval declared_type='ENCredentialStore*' type='@'/>
</method>
<method selector='removeCredentials:'>
<arg name='credentials' declared_type='ENCredentials*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='save'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='ENCredentials'>
<method selector='authenticationToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='deleteFromKeychain'>
<retval declared_type='void' type='v'/>
</method>
<method selector='edamUserId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='host'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithHost:edamUserId:noteStoreUrl:authenticationToken:'>
<arg name='host' declared_type='NSString*' type='@' index='0'/>
<arg name='edamUserId' declared_type='NSString*' type='@' index='1'/>
<arg name='noteStoreUrl' declared_type='NSString*' type='@' index='2'/>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='noteStoreUrl'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='saveToKeychain'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAuthenticationToken:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEdamUserId:'>
<arg name='edamUserId' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHost:'>
<arg name='host' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoteStoreUrl:'>
<arg name='noteStoreUrl' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EvernoteNoteStore'>
<method selector='authenticateToSharedNoteWithGuid:noteKey:success:failure:'>
<arg name='guid' declared_type='NSString*' type='@' index='0'/>
<arg name='noteKey' declared_type='NSString*' type='@' index='1'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMAuthenticationResult *)' type='@?' index='2'>
<arg declared_type='EDAMAuthenticationResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='3'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='authenticateToSharedNotebookWithShareKey:success:failure:'>
<arg name='shareKey' declared_type='NSString*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMAuthenticationResult *)' type='@?' index='1'>
<arg declared_type='EDAMAuthenticationResult*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='copyNoteWithGuid:toNoteBookGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='toNotebookGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNote *)' type='@?' index='2'>
<arg declared_type='EDAMNote*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='3'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='createLinkedNotebook:success:failure:'>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMLinkedNotebook *)' type='@?' index='1'>
<arg declared_type='EDAMLinkedNotebook*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='createNote:success:failure:'>
<arg name='note' declared_type='EDAMNote*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSString *)' type='@?' index='1'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='createNotebook:success:failure:'>
<arg name='notebook' declared_type='EDAMNotebook*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNotebook *)' type='@?' index='1'>
<arg declared_type='EDAMNotebook*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='createSearch:success:failure:'>
<arg name='search' declared_type='EDAMSavedSearch*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMSavedSearch *)' type='@?' index='1'>
<arg declared_type='EDAMSavedSearch*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='createSharedNotebook:success:failure:'>
<arg name='sharedNotebook' declared_type='EDAMSharedNotebook*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMSharedNotebook *)' type='@?' index='1'>
<arg declared_type='EDAMSharedNotebook*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='createTag:success:failure:'>
<arg name='tag' declared_type='EDAMTag*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMTag *)' type='@?' index='1'>
<arg declared_type='EDAMTag*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteNoteWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='emailNoteWithParameters:success:failure:'>
<arg name='parameters' declared_type='EDAMNoteEmailParameters*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)()' type='@?' index='1'>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='expungeInactiveNoteWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='0'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='expungeLinkedNotebookWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='expungeNoteWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='expungeNotebookWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='expungeNotesWithGuids:success:failure:'>
<arg name='guids' declared_type='NSArray*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='expungeSearchWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='expungeSharedNotebooksWithIds:success:failure:'>
<arg name='sharedNotebookIds' declared_type='NSArray*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='expungeTagWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='findNoteCountsWithFilter:withTrash:success:failure:'>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='0'/>
<arg name='withTrash' declared_type='BOOL' type='B' index='1'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNoteCollectionCounts *)' type='@?' index='2'>
<arg declared_type='EDAMNoteCollectionCounts*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='3'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='findNoteOffsetWithFilter:guid:success:failure:'>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='2'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='3'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='findNotesMetadataWithFilter:offset:maxNotes:resultSpec:success:failure:'>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='0'/>
<arg name='offset' declared_type='int32_t' type='i' index='1'/>
<arg name='maxNotes' declared_type='int32_t' type='i' index='2'/>
<arg name='resultSpec' declared_type='EDAMNotesMetadataResultSpec*' type='@' index='3'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNotesMetadataList *)' type='@?' index='4'>
<arg declared_type='EDAMNotesMetadataList*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='5'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='findNotesWithFilter:offset:maxNotes:success:failure:'>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='0'/>
<arg name='offset' declared_type='int32_t' type='i' index='1'/>
<arg name='maxNotes' declared_type='int32_t' type='i' index='2'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNoteList *)' type='@?' index='3'>
<arg declared_type='EDAMNoteList*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='4'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getAdsWithParameters:success:failure:'>
<arg name='adParameters' declared_type='EDAMAdParameters*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' index='1'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getDefaultNotebookWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNotebook *)' type='@?' index='0'>
<arg declared_type='EDAMNotebook*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getFilteredSyncChunkAfterUSN:maxEntries:filter:success:failure:'>
<arg name='afterUSN' declared_type='int32_t' type='i' index='0'/>
<arg name='maxEntries' declared_type='int32_t' type='i' index='1'/>
<arg name='filter' declared_type='EDAMSyncChunkFilter*' type='@' index='2'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMSyncChunk *)' type='@?' index='3'>
<arg declared_type='EDAMSyncChunk*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='4'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getLinkedNotebookSyncChunk:afterUSN:maxEntries:fullSyncOnly:success:failure:'>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='0'/>
<arg name='afterUSN' declared_type='int32_t' type='i' index='1'/>
<arg name='maxEntries' declared_type='int32_t' type='i' index='2'/>
<arg name='fullSyncOnly' declared_type='BOOL' type='B' index='3'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMSyncChunk *)' type='@?' index='4'>
<arg declared_type='EDAMSyncChunk*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='5'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getLinkedNotebookSyncState:success:failure:'>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMSyncState *)' type='@?' index='1'>
<arg declared_type='EDAMSyncState*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNoteApplicationDataEntryWithGuid:key:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSString *)' type='@?' index='2'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='3'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNoteApplicationDataWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMLazyMap *)' type='@?' index='1'>
<arg declared_type='EDAMLazyMap*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNoteContentWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSString *)' type='@?' index='1'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNoteSearchTextWithGuid:noteOnly:tokenizeForIndexing:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='noteOnly' declared_type='BOOL' type='B' index='1'/>
<arg name='tokenizeForIndexing' declared_type='BOOL' type='B' index='2'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSString *)' type='@?' index='3'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='4'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNoteTagNamesWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' index='1'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNoteVersionWithGuid:updateSequenceNum:withResourcesData:withResourcesRecognition:withResourcesAlternateData:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='1'/>
<arg name='withResourcesData' declared_type='BOOL' type='B' index='2'/>
<arg name='withResourcesRecognition' declared_type='BOOL' type='B' index='3'/>
<arg name='withResourcesAlternateData' declared_type='BOOL' type='B' index='4'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNote *)' type='@?' index='5'>
<arg declared_type='EDAMNote*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='6'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNoteWithGuid:withContent:withResourcesData:withResourcesRecognition:withResourcesAlternateData:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='withContent' declared_type='BOOL' type='B' index='1'/>
<arg name='withResourcesData' declared_type='BOOL' type='B' index='2'/>
<arg name='withResourcesRecognition' declared_type='BOOL' type='B' index='3'/>
<arg name='withResourcesAlternateData' declared_type='BOOL' type='B' index='4'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNote *)' type='@?' index='5'>
<arg declared_type='EDAMNote*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='6'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNotebookWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNotebook *)' type='@?' index='1'>
<arg declared_type='EDAMNotebook*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPublicNotebookWithUserID:publicUri:success:failure:'>
<arg name='userId' declared_type='EDAMUserID' type='i' index='0'/>
<arg name='publicUri' declared_type='NSString*' type='@' index='1'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMNotebook *)' type='@?' index='2'>
<arg declared_type='EDAMNotebook*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='3'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getRandomAdWithParameters:success:failure:'>
<arg name='adParameters' declared_type='EDAMAdParameters*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMAd *)' type='@?' index='1'>
<arg declared_type='EDAMAd*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getResourceAlternateDataWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSData *)' type='@?' index='1'>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getResourceApplicationDataEntryWithGuid:key:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSString *)' type='@?' index='2'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='3'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getResourceApplicationDataWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMLazyMap *)' type='@?' index='1'>
<arg declared_type='EDAMLazyMap*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getResourceAttributesWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMResourceAttributes *)' type='@?' index='1'>
<arg declared_type='EDAMResourceAttributes*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getResourceByHashWithGuid:contentHash:withData:withRecognition:withAlternateData:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='contentHash' declared_type='NSData*' type='@' index='1'/>
<arg name='withData' declared_type='BOOL' type='B' index='2'/>
<arg name='withRecognition' declared_type='BOOL' type='B' index='3'/>
<arg name='withAlternateData' declared_type='BOOL' type='B' index='4'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMResource *)' type='@?' index='5'>
<arg declared_type='EDAMResource*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='6'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getResourceDataWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSData *)' type='@?' index='1'>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getResourceRecognitionWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSData *)' type='@?' index='1'>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getResourceSearchTextWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSString *)' type='@?' index='1'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getResourceWithGuid:withData:withRecognition:withAttributes:withAlternateDate:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='withData' declared_type='BOOL' type='B' index='1'/>
<arg name='withRecognition' declared_type='BOOL' type='B' index='2'/>
<arg name='withAttributes' declared_type='BOOL' type='B' index='3'/>
<arg name='withAlternateData' declared_type='BOOL' type='B' index='4'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMResource *)' type='@?' index='5'>
<arg declared_type='EDAMResource*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='6'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getSearchWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMSavedSearch *)' type='@?' index='1'>
<arg declared_type='EDAMSavedSearch*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getSharedNotebookByAuthWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMSharedNotebook *)' type='@?' index='0'>
<arg declared_type='EDAMSharedNotebook*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getSyncChunkAfterUSN:maxEntries:fullSyncOnly:success:failure:'>
<arg name='afterUSN' declared_type='int32_t' type='i' index='0'/>
<arg name='maxEntries' declared_type='int32_t' type='i' index='1'/>
<arg name='fullSyncOnly' declared_type='BOOL' type='B' index='2'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMSyncChunk *)' type='@?' index='3'>
<arg declared_type='EDAMSyncChunk*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='4'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getSyncStateWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMSyncState *)' type='@?' index='0'>
<arg declared_type='EDAMSyncState*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getTagWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMTag *)' type='@?' index='1'>
<arg declared_type='EDAMTag*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithSession:'>
<arg name='session' declared_type='EvernoteSession*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='listLinkedNotebooksWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' index='0'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='listNoteVersionsWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' index='1'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='listNotebooksWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' index='0'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='listSearchesWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' index='0'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='listSharedNotebooksWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' index='0'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='listTagsByNotebookWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' index='1'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='listTagsWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(NSArray *)' type='@?' index='0'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='noteStore' class_method='true'>
<retval declared_type='EvernoteNoteStore*' type='@'/>
</method>
<method selector='sendMessageToSharedNotebookMembersWithGuid:messageText:recipients:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='messageText' declared_type='NSString*' type='@' index='1'/>
<arg name='recipients' declared_type='NSArray*' type='@' index='2'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='3'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='4'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoteApplicationDataEntryWithGuid:key:value:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='value' declared_type='NSString*' type='@' index='2'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='3'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='4'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResourceApplicationDataEntryWithGuid:key:value:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='value' declared_type='NSString*' type='@' index='2'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='3'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='4'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shareNoteWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSString *)' type='@?' index='1'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopSharingNoteWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)()' type='@?' index='1'>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='unsetNoteApplicationDataEntryWithGuid:key:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='2'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='3'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='unsetResourceApplicationDataEntryWithGuid:key:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='key' declared_type='NSString*' type='@' index='1'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='2'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='3'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='untagAllWithGuid:success:failure:'>
<arg name='guid' declared_type='EDAMGuid' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)()' type='@?' index='1'>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateLinkedNotebook:success:failure:'>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateNote:success:failure:'>
<arg name='note' declared_type='EDAMNote*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(NSString *)' type='@?' index='1'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateNotebook:success:failure:'>
<arg name='notebook' declared_type='EDAMNotebook*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateResource:success:failure:'>
<arg name='resource' declared_type='EDAMResource*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateSearch:success:failure:'>
<arg name='search' declared_type='EDAMSavedSearch*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateTag:success:failure:'>
<arg name='tag' declared_type='EDAMTag*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(int32_t)' type='@?' index='1'>
<arg declared_type='int32_t' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='EvernoteSession'>
<method selector='authenticateWithCompletionHandler:'>
<arg name='completionHandler' function_pointer='true' declared_type='EvernoteAuthCompletionHandler' type='@?' index='0'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='authenticationToken'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='handleOpenURL:'>
<arg name='url' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isAuthenticated'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='logout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='noteStore'>
<retval declared_type='EDAMNoteStoreClient*' type='@'/>
</method>
<method selector='queue'>
<retval declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
</method>
<method selector='setSharedSessionHost:consumerKey:consumerSecret:' class_method='true'>
<arg name='host' declared_type='NSString*' type='@' index='0'/>
<arg name='consumerKey' declared_type='NSString*' type='@' index='1'/>
<arg name='consumerSecret' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sharedSession' class_method='true'>
<retval declared_type='EvernoteSession*' type='@'/>
</method>
<method selector='userStore'>
<retval declared_type='EDAMUserStoreClient*' type='@'/>
</method>
</class>
<class name='EvernoteUserStore'>
<method selector='checkVersionWithClientName:edamVersionMajor:edamVersionMinor:success:failure:'>
<arg name='clientName' declared_type='NSString*' type='@' index='0'/>
<arg name='edamVersionMajor' declared_type='int16_t' type='s' index='1'/>
<arg name='edamVersionMinor' declared_type='int16_t' type='s' index='2'/>
<arg name='success' function_pointer='true' declared_type='void (^)(BOOL)' type='@?' index='3'>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='4'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getBootstrapInfoWithLocale:success:failure:'>
<arg name='locale' declared_type='NSString*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMBootstrapInfo *)' type='@?' index='1'>
<arg declared_type='EDAMBootstrapInfo*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getNoteStoreUrlWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(NSString *)' type='@?' index='0'>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPremiumInfoWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMPremiumInfo *)' type='@?' index='0'>
<arg declared_type='EDAMPremiumInfo*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getPublicUserInfoWithUsername:success:failure:'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMPublicUserInfo *)' type='@?' index='1'>
<arg declared_type='EDAMPublicUserInfo*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='2'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='getUserWithSuccess:failure:'>
<arg name='success' function_pointer='true' declared_type='void (^)(EDAMUser *)' type='@?' index='0'>
<arg declared_type='EDAMUser*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg name='failure' function_pointer='true' declared_type='void (^)(NSError *)' type='@?' index='1'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithSession:'>
<arg name='session' declared_type='EvernoteSession*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='userStore' class_method='true'>
<retval declared_type='EvernoteUserStore*' type='@'/>
</method>
</class>
<class name='GCOAuth'>
<method selector='URLRequestForPath:GETParameters:host:consumerKey:consumerSecret:accessToken:tokenSecret:' class_method='true'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='host' declared_type='NSString*' type='@' index='2'/>
<arg name='consumerKey' declared_type='NSString*' type='@' index='3'/>
<arg name='consumerSecret' declared_type='NSString*' type='@' index='4'/>
<arg name='accessToken' declared_type='NSString*' type='@' index='5'/>
<arg name='tokenSecret' declared_type='NSString*' type='@' index='6'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='URLRequestForPath:GETParameters:scheme:host:consumerKey:consumerSecret:accessToken:tokenSecret:' class_method='true'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='scheme' declared_type='NSString*' type='@' index='2'/>
<arg name='host' declared_type='NSString*' type='@' index='3'/>
<arg name='consumerKey' declared_type='NSString*' type='@' index='4'/>
<arg name='consumerSecret' declared_type='NSString*' type='@' index='5'/>
<arg name='accessToken' declared_type='NSString*' type='@' index='6'/>
<arg name='tokenSecret' declared_type='NSString*' type='@' index='7'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='URLRequestForPath:POSTParameters:host:consumerKey:consumerSecret:accessToken:tokenSecret:' class_method='true'>
<arg name='path' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='NSDictionary*' type='@' index='1'/>
<arg name='host' declared_type='NSString*' type='@' index='2'/>
<arg name='consumerKey' declared_type='NSString*' type='@' index='3'/>
<arg name='consumerSecret' declared_type='NSString*' type='@' index='4'/>
<arg name='accessToken' declared_type='NSString*' type='@' index='5'/>
<arg name='tokenSecret' declared_type='NSString*' type='@' index='6'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='setHTTPShouldHandleCookies:' class_method='true'>
<arg name='handle' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeStampOffset:' class_method='true'>
<arg name='offset' declared_type='time_t' type='l' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserAgent:' class_method='true'>
<arg name='agent' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSData'>
<method selector='base64EncodedString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='base64EncodedStringWithSeparateLines:'>
<arg name='separateLines' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dataFromBase64String:' class_method='true'>
<arg name='aString' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='authenticate::::'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<arg name='password' declared_type='NSString*' type='@' index='1'/>
<arg name='consumerKey' declared_type='NSString*' type='@' index='2'/>
<arg name='consumerSecret' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='EDAMAuthenticationResult*' type='@'/>
</method>
<method selector='authenticateToSharedNote::'>
<arg name='guid' declared_type='NSString*' type='@' index='0'/>
<arg name='noteKey' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='EDAMAuthenticationResult*' type='@'/>
</method>
<method selector='authenticateToSharedNotebook::'>
<arg name='shareKey' declared_type='NSString*' type='@' index='0'/>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='EDAMAuthenticationResult*' type='@'/>
</method>
<method selector='checkVersion:::'>
<arg name='clientName' declared_type='NSString*' type='@' index='0'/>
<arg name='edamVersionMajor' declared_type='int16_t' type='s' index='1'/>
<arg name='edamVersionMinor' declared_type='int16_t' type='s' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='copyNote:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='toNotebookGuid' declared_type='EDAMGuid' type='@' index='2'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method selector='createLinkedNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='1'/>
<retval declared_type='EDAMLinkedNotebook*' type='@'/>
</method>
<method selector='createNewLogFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='createNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='note' declared_type='EDAMNote*' type='@' index='1'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method selector='createNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='notebook' declared_type='EDAMNotebook*' type='@' index='1'/>
<retval declared_type='EDAMNotebook*' type='@'/>
</method>
<method selector='createSearch::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='search' declared_type='EDAMSavedSearch*' type='@' index='1'/>
<retval declared_type='EDAMSavedSearch*' type='@'/>
</method>
<method selector='createSharedNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='sharedNotebook' declared_type='EDAMSharedNotebook*' type='@' index='1'/>
<retval declared_type='EDAMSharedNotebook*' type='@'/>
</method>
<method selector='createTag::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='tag' declared_type='EDAMTag*' type='@' index='1'/>
<retval declared_type='EDAMTag*' type='@'/>
</method>
<method selector='ddLogLevel' class_method='true'>
<retval declared_type='int' type='i'/>
</method>
<method selector='ddSetLogLevel:' class_method='true'>
<arg name='logLevel' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='deleteNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='didAddLogger'>
<retval declared_type='void' type='v'/>
</method>
<method selector='didArchiveLogFile:'>
<arg name='logFilePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='didRollAndArchiveLogFile:'>
<arg name='logFilePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='emailNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='EDAMNoteEmailParameters*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='expungeInactiveNotes:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='expungeLinkedNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='expungeNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='expungeNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='expungeNotes::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuids' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='expungeSearch::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='expungeSharedNotebooks::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='sharedNotebookIds' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='expungeTag::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='findNoteCounts:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='1'/>
<arg name='withTrash' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='EDAMNoteCollectionCounts*' type='@'/>
</method>
<method selector='findNoteOffset:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='1'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='2'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='findNotes::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='1'/>
<arg name='offset' declared_type='int32_t' type='i' index='2'/>
<arg name='maxNotes' declared_type='int32_t' type='i' index='3'/>
<retval declared_type='EDAMNoteList*' type='@'/>
</method>
<method selector='findNotesMetadata:::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='1'/>
<arg name='offset' declared_type='int32_t' type='i' index='2'/>
<arg name='maxNotes' declared_type='int32_t' type='i' index='3'/>
<arg name='resultSpec' declared_type='EDAMNotesMetadataResultSpec*' type='@' index='4'/>
<retval declared_type='EDAMNotesMetadataList*' type='@'/>
</method>
<method selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method selector='formatLogMessage:'>
<arg name='logMessage' declared_type='DDLogMessage*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getAccountSize:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='getAds::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='adParameters' declared_type='EDAMAdParameters*' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='getBootstrapInfo:'>
<arg name='locale' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMBootstrapInfo*' type='@'/>
</method>
<method selector='getDefaultNotebook:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMNotebook*' type='@'/>
</method>
<method selector='getFilteredSyncChunk::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='afterUSN' declared_type='int32_t' type='i' index='1'/>
<arg name='maxEntries' declared_type='int32_t' type='i' index='2'/>
<arg name='filter' declared_type='EDAMSyncChunkFilter*' type='@' index='3'/>
<retval declared_type='EDAMSyncChunk*' type='@'/>
</method>
<method selector='getLinkedNotebookSyncChunk:::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='1'/>
<arg name='afterUSN' declared_type='int32_t' type='i' index='2'/>
<arg name='maxEntries' declared_type='int32_t' type='i' index='3'/>
<arg name='fullSyncOnly' declared_type='BOOL' type='B' index='4'/>
<retval declared_type='EDAMSyncChunk*' type='@'/>
</method>
<method selector='getLinkedNotebookSyncState::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='1'/>
<retval declared_type='EDAMSyncState*' type='@'/>
</method>
<method selector='getNote::::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='withContent' declared_type='BOOL' type='B' index='2'/>
<arg name='withResourcesData' declared_type='BOOL' type='B' index='3'/>
<arg name='withResourcesRecognition' declared_type='BOOL' type='B' index='4'/>
<arg name='withResourcesAlternateData' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method selector='getNoteApplicationData::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMLazyMap*' type='@'/>
</method>
<method selector='getNoteApplicationDataEntry:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getNoteContent::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getNoteSearchText::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='noteOnly' declared_type='BOOL' type='B' index='2'/>
<arg name='tokenizeForIndexing' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getNoteStoreUrl:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getNoteTagNames::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='getNoteVersion::::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='2'/>
<arg name='withResourcesData' declared_type='BOOL' type='B' index='3'/>
<arg name='withResourcesRecognition' declared_type='BOOL' type='B' index='4'/>
<arg name='withResourcesAlternateData' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method selector='getNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMNotebook*' type='@'/>
</method>
<method selector='getPremiumInfo:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMPremiumInfo*' type='@'/>
</method>
<method selector='getPublicNotebook::'>
<arg name='userId' declared_type='EDAMUserID' type='i' index='0'/>
<arg name='publicUri' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='EDAMNotebook*' type='@'/>
</method>
<method selector='getPublicUserInfo:'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMPublicUserInfo*' type='@'/>
</method>
<method selector='getRandomAd::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='adParameters' declared_type='EDAMAdParameters*' type='@' index='1'/>
<retval declared_type='EDAMAd*' type='@'/>
</method>
<method selector='getResource::::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='withData' declared_type='BOOL' type='B' index='2'/>
<arg name='withRecognition' declared_type='BOOL' type='B' index='3'/>
<arg name='withAttributes' declared_type='BOOL' type='B' index='4'/>
<arg name='withAlternateData' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='EDAMResource*' type='@'/>
</method>
<method selector='getResourceAlternateData::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='getResourceApplicationData::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMLazyMap*' type='@'/>
</method>
<method selector='getResourceApplicationDataEntry:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getResourceAttributes::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMResourceAttributes*' type='@'/>
</method>
<method selector='getResourceByHash::::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='contentHash' declared_type='NSData*' type='@' index='2'/>
<arg name='withData' declared_type='BOOL' type='B' index='3'/>
<arg name='withRecognition' declared_type='BOOL' type='B' index='4'/>
<arg name='withAlternateData' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='EDAMResource*' type='@'/>
</method>
<method selector='getResourceData::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='getResourceRecognition::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='getResourceSearchText::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='getSearch::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMSavedSearch*' type='@'/>
</method>
<method selector='getSharedNotebookByAuth:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMSharedNotebook*' type='@'/>
</method>
<method selector='getSyncChunk::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='afterUSN' declared_type='int32_t' type='i' index='1'/>
<arg name='maxEntries' declared_type='int32_t' type='i' index='2'/>
<arg name='fullSyncOnly' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='EDAMSyncChunk*' type='@'/>
</method>
<method selector='getSyncState:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMSyncState*' type='@'/>
</method>
<method selector='getTag::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMTag*' type='@'/>
</method>
<method selector='getUser:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMUser*' type='@'/>
</method>
<method selector='listLinkedNotebooks:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='listNoteVersions::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='listNotebooks:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='listSearches:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='listSharedNotebooks:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='listTags:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='listTagsByNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='notebookGuid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method selector='logMessage:'>
<arg name='logMessage' declared_type='DDLogMessage*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='loggerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='loggerQueue'>
<retval declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
</method>
<method selector='logsDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='maximumNumberOfLogFiles'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='newProtocolOnTransport:'>
<arg name='transport' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='processOnInputProtocol:outputProtocol:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<arg name='outProtocol' declared_type='id' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='processorForTransport:'>
<arg name='transport' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='readAll:offset:length:'>
<arg name='buf' declared_type='uint8_t*' type='*' index='0'/>
<arg name='off' declared_type='int' type='i' index='1'/>
<arg name='len' declared_type='int' type='i' index='2'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='readBinary'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='readBool'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='readByte'>
<retval declared_type='unsigned char' type='C'/>
</method>
<method selector='readDouble'>
<retval declared_type='double' type='d'/>
</method>
<method selector='readFieldBeginReturningName:type:fieldID:'>
<arg name='name' declared_type='NSString**' type='^@' index='0'/>
<arg name='fieldType' declared_type='int*' type='^i' index='1'/>
<arg name='fieldID' declared_type='int*' type='^i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readFieldEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='readI16'>
<retval declared_type='short' type='s'/>
</method>
<method selector='readI32'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='readI64'>
<retval declared_type='int64_t' type='q'/>
</method>
<method selector='readListBeginReturningElementType:size:'>
<arg name='elementType' declared_type='int*' type='^i' index='0'/>
<arg name='size' declared_type='int*' type='^i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readListEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='readMapBeginReturningKeyType:valueType:size:'>
<arg name='keyType' declared_type='int*' type='^i' index='0'/>
<arg name='valueType' declared_type='int*' type='^i' index='1'/>
<arg name='size' declared_type='int*' type='^i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readMapEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='readMessageBeginReturningName:type:sequenceID:'>
<arg name='name' declared_type='NSString**' type='^@' index='0'/>
<arg name='type' declared_type='int*' type='^i' index='1'/>
<arg name='sequenceID' declared_type='int*' type='^i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readMessageEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='readSetBeginReturningElementType:size:'>
<arg name='elementType' declared_type='int*' type='^i' index='0'/>
<arg name='size' declared_type='int*' type='^i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readSetEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='readString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='readStructBeginReturningName:'>
<arg name='name' declared_type='NSString**' type='^@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='readStructEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='refreshAuthentication:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMAuthenticationResult*' type='@'/>
</method>
<method selector='sendMessageToSharedNotebookMembers::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='notebookGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='messageText' declared_type='NSString*' type='@' index='2'/>
<arg name='recipients' declared_type='NSArray*' type='@' index='3'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='setLogFormatter:'>
<arg name='formatter' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaximumNumberOfLogFiles:'>
<arg name='maximumNumberOfLogFiles' declared_type='NSUInteger' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNoteApplicationDataEntry::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<arg name='value' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='setResourceApplicationDataEntry::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<arg name='value' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='shareNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='sortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='stopSharingNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transport'>
<retval declared_type='id' type='@'/>
</method>
<method selector='unsetNoteApplicationDataEntry:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='unsetResourceApplicationDataEntry:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='unsortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='unsortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='untagAll::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateLinkedNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='note' declared_type='EDAMNote*' type='@' index='1'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method selector='updateNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='notebook' declared_type='EDAMNotebook*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateResource::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='resource' declared_type='EDAMResource*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateSearch::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='search' declared_type='EDAMSavedSearch*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='updateTag::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='tag' declared_type='EDAMTag*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='willRemoveLogger'>
<retval declared_type='void' type='v'/>
</method>
<method selector='write:offset:length:'>
<arg name='data' declared_type='uint8_t*' const='true' type='*' index='0'/>
<arg name='offset' declared_type='unsigned int' type='I' index='1'/>
<arg name='length' declared_type='unsigned int' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeBinary:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeBool:'>
<arg name='value' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeByte:'>
<arg name='value' declared_type='uint8_t' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeDouble:'>
<arg name='value' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeFieldBeginWithName:type:fieldID:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='fieldType' declared_type='int' type='i' index='1'/>
<arg name='fieldID' declared_type='int' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeFieldEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeFieldStop'>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeI16:'>
<arg name='value' declared_type='short' type='s' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeI32:'>
<arg name='value' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeI64:'>
<arg name='value' declared_type='int64_t' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeListBeginWithElementType:size:'>
<arg name='elementType' declared_type='int' type='i' index='0'/>
<arg name='size' declared_type='int' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeListEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeMapBeginWithKeyType:valueType:size:'>
<arg name='keyType' declared_type='int' type='i' index='0'/>
<arg name='valueType' declared_type='int' type='i' index='1'/>
<arg name='size' declared_type='int' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeMapEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeMessageBeginWithName:type:sequenceID:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='messageType' declared_type='int' type='i' index='1'/>
<arg name='sequenceID' declared_type='int' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeMessageEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeSetBeginWithElementType:size:'>
<arg name='elementType' declared_type='int' type='i' index='0'/>
<arg name='size' declared_type='int' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeSetEnd'>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeString:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeStructBeginWithName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeStructEnd'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSString'>
<method selector='URLDecodedString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='URLEncodedString'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='SSKeychain'>
<method selector='accessibilityType' class_method='true'>
<retval declared_type='CFTypeRef' type='@'/>
</method>
<method selector='accountsForService:' class_method='true'>
<arg name='serviceName' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='accountsForService:error:' class_method='true'>
<arg name='serviceName' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError**' type='^@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='allAccounts' class_method='true'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='allAccounts:' class_method='true'>
<arg name='error' declared_type='NSError**' type='^@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='deletePasswordForService:account:' class_method='true'>
<arg name='serviceName' declared_type='NSString*' type='@' index='0'/>
<arg name='account' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='deletePasswordForService:account:error:' class_method='true'>
<arg name='serviceName' declared_type='NSString*' type='@' index='0'/>
<arg name='account' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='passwordDataForService:account:' class_method='true'>
<arg name='serviceName' declared_type='NSString*' type='@' index='0'/>
<arg name='account' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='passwordDataForService:account:error:' class_method='true'>
<arg name='serviceName' declared_type='NSString*' type='@' index='0'/>
<arg name='account' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='passwordForService:account:' class_method='true'>
<arg name='serviceName' declared_type='NSString*' type='@' index='0'/>
<arg name='account' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='passwordForService:account:error:' class_method='true'>
<arg name='serviceName' declared_type='NSString*' type='@' index='0'/>
<arg name='account' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError**' type='^@' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setAccessibilityType:' class_method='true'>
<arg name='accessibilityType' declared_type='CFTypeRef' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPassword:forService:account:' class_method='true'>
<arg name='password' declared_type='NSString*' type='@' index='0'/>
<arg name='serviceName' declared_type='NSString*' type='@' index='1'/>
<arg name='account' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPassword:forService:account:error:' class_method='true'>
<arg name='password' declared_type='NSString*' type='@' index='0'/>
<arg name='serviceName' declared_type='NSString*' type='@' index='1'/>
<arg name='account' declared_type='NSString*' type='@' index='2'/>
<arg name='error' declared_type='NSError**' type='^@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPasswordData:forService:account:' class_method='true'>
<arg name='password' declared_type='NSData*' type='@' index='0'/>
<arg name='serviceName' declared_type='NSString*' type='@' index='1'/>
<arg name='account' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPasswordData:forService:account:error:' class_method='true'>
<arg name='password' declared_type='NSData*' type='@' index='0'/>
<arg name='serviceName' declared_type='NSString*' type='@' index='1'/>
<arg name='account' declared_type='NSString*' type='@' index='2'/>
<arg name='error' declared_type='NSError**' type='^@' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='TApplicationException'>
<method selector='exceptionWithType:reason:' class_method='true'>
<arg name='type' declared_type='int' type='i' index='0'/>
<arg name='message' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='TApplicationException*' type='@'/>
</method>
<method selector='read:' class_method='true'>
<arg name='protocol' declared_type='id' type='@' index='0'/>
<retval declared_type='TApplicationException*' type='@'/>
</method>
<method selector='write:'>
<arg name='protocol' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='TBinaryProtocol'>
<method selector='initWithTransport:'>
<arg name='transport' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTransport:strictRead:strictWrite:'>
<arg name='transport' declared_type='id' type='@' index='0'/>
<arg name='strictRead' declared_type='BOOL' type='B' index='1'/>
<arg name='strictWrite' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='messageSizeLimit'>
<retval declared_type='int32_t' type='i'/>
</method>
<method selector='setMessageSizeLimit:'>
<arg name='sizeLimit' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='TBinaryProtocolFactory'>
<method selector='newProtocolOnTransport:'>
<arg name='transport' declared_type='id' type='@' index='0'/>
<retval declared_type='TBinaryProtocol*' type='@'/>
</method>
<method selector='sharedFactory' class_method='true'>
<retval declared_type='TBinaryProtocolFactory*' type='@'/>
</method>
</class>
<class name='TException'>
<method selector='exceptionWithName:' class_method='true'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='exceptionWithName:reason:' class_method='true'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='reason' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='exceptionWithName:reason:error:' class_method='true'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='reason' declared_type='NSString*' type='@' index='1'/>
<arg name='error' declared_type='NSError*' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='THTTPClient'>
<method selector='initWithURL:'>
<arg name='aURL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:userAgent:timeout:'>
<arg name='aURL' declared_type='NSURL*' type='@' index='0'/>
<arg name='userAgent' declared_type='NSString*' type='@' index='1'/>
<arg name='timeout' declared_type='int' type='i' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setURL:'>
<arg name='aURL' declared_type='NSURL*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='TMemoryBuffer'>
<method selector='getBuffer'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='initWithData:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='TNSFileHandleTransport'>
<method selector='initWithFileHandle:'>
<arg name='fileHandle' declared_type='NSFileHandle*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithInputFileHandle:outputFileHandle:'>
<arg name='inputFileHandle' declared_type='NSFileHandle*' type='@' index='0'/>
<arg name='outputFileHandle' declared_type='NSFileHandle*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='TNSStreamTransport'>
<method selector='initWithInputStream:'>
<arg name='input' declared_type='NSInputStream*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithInputStream:outputStream:'>
<arg name='input' declared_type='NSInputStream*' type='@' index='0'/>
<arg name='output' declared_type='NSOutputStream*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithOutputStream:'>
<arg name='output' declared_type='NSOutputStream*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='TProtocolUtil'>
<method selector='skipType:onProtocol:' class_method='true'>
<arg name='type' declared_type='int' type='i' index='0'/>
<arg name='protocol' declared_type='id' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='TSharedProcessorFactory'>
<method selector='initWithSharedProcessor:'>
<arg name='sharedProcessor' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='TSocketClient'>
<method selector='initWithHostname:port:'>
<arg name='hostname' declared_type='NSString*' type='@' index='0'/>
<arg name='port' declared_type='int' type='i' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='TSocketServer'>
<method selector='initWithPort:protocolFactory:processorFactory:'>
<arg name='port' declared_type='int' type='i' index='0'/>
<arg name='protocolFactory' declared_type='id' type='@' index='1'/>
<arg name='processorFactory' declared_type='id' type='@' index='2'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='TTransportException'>
<method selector='exceptionWithReason:' class_method='true'>
<arg name='reason' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='exceptionWithReason:error:' class_method='true'>
<arg name='reason' declared_type='NSString*' type='@' index='0'/>
<arg name='error' declared_type='NSError*' type='@' index='1'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIPasteboard'>
<method selector='setWebArchive:'>
<arg name='webArchive' declared_type='DTWebArchive*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='webArchive'>
<retval declared_type='DTWebArchive*' type='@'/>
</method>
</class>
<informal_protocol name='DDLogFileManager'>
<method type='@8@0:4' selector='createNewLogFile'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4@8' selector='didArchiveLogFile:'>
<arg name='logFilePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='didRollAndArchiveLogFile:'>
<arg name='logFilePath' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='logsDirectory'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='I8@0:4' selector='maximumNumberOfLogFiles'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method type='v12@0:4I8' selector='setMaximumNumberOfLogFiles:'>
<arg name='maximumNumberOfLogFiles' declared_type='NSUInteger' type='I' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='sortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='sortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='sortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='unsortedLogFileInfos'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='unsortedLogFileNames'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='unsortedLogFilePaths'>
<retval declared_type='NSArray*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogFormatter'>
<method type='@12@0:4@8' selector='formatLogMessage:'>
<arg name='logMessage' declared_type='DDLogMessage*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='DDLogger'>
<method type='v8@0:4' selector='didAddLogger'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='logFormatter'>
<retval declared_type='id' type='@'/>
</method>
<method type='v12@0:4@8' selector='logMessage:'>
<arg name='logMessage' declared_type='DDLogMessage*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='loggerName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='^{dispatch_queue_s=}8@0:4' selector='loggerQueue'>
<retval declared_type='dispatch_queue_t' type='^{dispatch_queue_s=}'/>
</method>
<method type='v12@0:4@8' selector='setLogFormatter:'>
<arg name='formatter' declared_type='id' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='willRemoveLogger'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='DDRegisteredDynamicLogging'>
<method type='i8@0:4' selector='ddLogLevel' class_method='true'>
<retval declared_type='int' type='i'/>
</method>
<method type='v12@0:4i8' selector='ddSetLogLevel:' class_method='true'>
<arg name='logLevel' declared_type='int' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='EDAMNoteStore'>
<method type='@16@0:4@8@12' selector='authenticateToSharedNote::'>
<arg name='guid' declared_type='NSString*' type='@' index='0'/>
<arg name='noteKey' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='EDAMAuthenticationResult*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='authenticateToSharedNotebook::'>
<arg name='shareKey' declared_type='NSString*' type='@' index='0'/>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='EDAMAuthenticationResult*' type='@'/>
</method>
<method type='@20@0:4@8@12@16' selector='copyNote:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='toNotebookGuid' declared_type='EDAMGuid' type='@' index='2'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='createLinkedNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='1'/>
<retval declared_type='EDAMLinkedNotebook*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='createNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='note' declared_type='EDAMNote*' type='@' index='1'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='createNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='notebook' declared_type='EDAMNotebook*' type='@' index='1'/>
<retval declared_type='EDAMNotebook*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='createSearch::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='search' declared_type='EDAMSavedSearch*' type='@' index='1'/>
<retval declared_type='EDAMSavedSearch*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='createSharedNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='sharedNotebook' declared_type='EDAMSharedNotebook*' type='@' index='1'/>
<retval declared_type='EDAMSharedNotebook*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='createTag::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='tag' declared_type='EDAMTag*' type='@' index='1'/>
<retval declared_type='EDAMTag*' type='@'/>
</method>
<method type='i16@0:4@8@12' selector='deleteNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='v16@0:4@8@12' selector='emailNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='parameters' declared_type='EDAMNoteEmailParameters*' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method type='i12@0:4@8' selector='expungeInactiveNotes:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='expungeLinkedNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='expungeNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='expungeNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='expungeNotes::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuids' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='expungeSearch::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='expungeSharedNotebooks::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='sharedNotebookIds' declared_type='NSArray*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='expungeTag::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='@20@0:4@8@12B16' selector='findNoteCounts:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='1'/>
<arg name='withTrash' declared_type='BOOL' type='B' index='2'/>
<retval declared_type='EDAMNoteCollectionCounts*' type='@'/>
</method>
<method type='i20@0:4@8@12@16' selector='findNoteOffset:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='1'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='2'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='@24@0:4@8@12i16i20' selector='findNotes::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='1'/>
<arg name='offset' declared_type='int32_t' type='i' index='2'/>
<arg name='maxNotes' declared_type='int32_t' type='i' index='3'/>
<retval declared_type='EDAMNoteList*' type='@'/>
</method>
<method type='@28@0:4@8@12i16i20@24' selector='findNotesMetadata:::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='filter' declared_type='EDAMNoteFilter*' type='@' index='1'/>
<arg name='offset' declared_type='int32_t' type='i' index='2'/>
<arg name='maxNotes' declared_type='int32_t' type='i' index='3'/>
<arg name='resultSpec' declared_type='EDAMNotesMetadataResultSpec*' type='@' index='4'/>
<retval declared_type='EDAMNotesMetadataList*' type='@'/>
</method>
<method type='q12@0:4@8' selector='getAccountSize:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='int64_t' type='q'/>
</method>
<method type='@16@0:4@8@12' selector='getAds::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='adParameters' declared_type='EDAMAdParameters*' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@12@0:4@8' selector='getDefaultNotebook:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMNotebook*' type='@'/>
</method>
<method type='@24@0:4@8i12i16@20' selector='getFilteredSyncChunk::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='afterUSN' declared_type='int32_t' type='i' index='1'/>
<arg name='maxEntries' declared_type='int32_t' type='i' index='2'/>
<arg name='filter' declared_type='EDAMSyncChunkFilter*' type='@' index='3'/>
<retval declared_type='EDAMSyncChunk*' type='@'/>
</method>
<method type='@28@0:4@8@12i16i20B24' selector='getLinkedNotebookSyncChunk:::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='1'/>
<arg name='afterUSN' declared_type='int32_t' type='i' index='2'/>
<arg name='maxEntries' declared_type='int32_t' type='i' index='3'/>
<arg name='fullSyncOnly' declared_type='BOOL' type='B' index='4'/>
<retval declared_type='EDAMSyncChunk*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getLinkedNotebookSyncState::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='1'/>
<retval declared_type='EDAMSyncState*' type='@'/>
</method>
<method type='@32@0:4@8@12B16B20B24B28' selector='getNote::::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='withContent' declared_type='BOOL' type='B' index='2'/>
<arg name='withResourcesData' declared_type='BOOL' type='B' index='3'/>
<arg name='withResourcesRecognition' declared_type='BOOL' type='B' index='4'/>
<arg name='withResourcesAlternateData' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getNoteApplicationData::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMLazyMap*' type='@'/>
</method>
<method type='@20@0:4@8@12@16' selector='getNoteApplicationDataEntry:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getNoteContent::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@24@0:4@8@12B16B20' selector='getNoteSearchText::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='noteOnly' declared_type='BOOL' type='B' index='2'/>
<arg name='tokenizeForIndexing' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getNoteTagNames::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@32@0:4@8@12i16B20B24B28' selector='getNoteVersion::::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='updateSequenceNum' declared_type='int32_t' type='i' index='2'/>
<arg name='withResourcesData' declared_type='BOOL' type='B' index='3'/>
<arg name='withResourcesRecognition' declared_type='BOOL' type='B' index='4'/>
<arg name='withResourcesAlternateData' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMNotebook*' type='@'/>
</method>
<method type='@16@0:4i8@12' selector='getPublicNotebook::'>
<arg name='userId' declared_type='EDAMUserID' type='i' index='0'/>
<arg name='publicUri' declared_type='NSString*' type='@' index='1'/>
<retval declared_type='EDAMNotebook*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getRandomAd::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='adParameters' declared_type='EDAMAdParameters*' type='@' index='1'/>
<retval declared_type='EDAMAd*' type='@'/>
</method>
<method type='@32@0:4@8@12B16B20B24B28' selector='getResource::::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='withData' declared_type='BOOL' type='B' index='2'/>
<arg name='withRecognition' declared_type='BOOL' type='B' index='3'/>
<arg name='withAttributes' declared_type='BOOL' type='B' index='4'/>
<arg name='withAlternateData' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='EDAMResource*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getResourceAlternateData::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getResourceApplicationData::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMLazyMap*' type='@'/>
</method>
<method type='@20@0:4@8@12@16' selector='getResourceApplicationDataEntry:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getResourceAttributes::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMResourceAttributes*' type='@'/>
</method>
<method type='@32@0:4@8@12@16B20B24B28' selector='getResourceByHash::::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='contentHash' declared_type='NSData*' type='@' index='2'/>
<arg name='withData' declared_type='BOOL' type='B' index='3'/>
<arg name='withRecognition' declared_type='BOOL' type='B' index='4'/>
<arg name='withAlternateData' declared_type='BOOL' type='B' index='5'/>
<retval declared_type='EDAMResource*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getResourceData::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getResourceRecognition::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getResourceSearchText::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getSearch::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMSavedSearch*' type='@'/>
</method>
<method type='@12@0:4@8' selector='getSharedNotebookByAuth:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMSharedNotebook*' type='@'/>
</method>
<method type='@24@0:4@8i12i16B20' selector='getSyncChunk::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='afterUSN' declared_type='int32_t' type='i' index='1'/>
<arg name='maxEntries' declared_type='int32_t' type='i' index='2'/>
<arg name='fullSyncOnly' declared_type='BOOL' type='B' index='3'/>
<retval declared_type='EDAMSyncChunk*' type='@'/>
</method>
<method type='@12@0:4@8' selector='getSyncState:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMSyncState*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='getTag::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='EDAMTag*' type='@'/>
</method>
<method type='@12@0:4@8' selector='listLinkedNotebooks:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='listNoteVersions::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='noteGuid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@12@0:4@8' selector='listNotebooks:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@12@0:4@8' selector='listSearches:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@12@0:4@8' selector='listSharedNotebooks:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@12@0:4@8' selector='listTags:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='listTagsByNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='notebookGuid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='i24@0:4@8@12@16@20' selector='sendMessageToSharedNotebookMembers::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='notebookGuid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='messageText' declared_type='NSString*' type='@' index='2'/>
<arg name='recipients' declared_type='NSArray*' type='@' index='3'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i24@0:4@8@12@16@20' selector='setNoteApplicationDataEntry::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<arg name='value' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i24@0:4@8@12@16@20' selector='setResourceApplicationDataEntry::::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<arg name='value' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='@16@0:4@8@12' selector='shareNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v16@0:4@8@12' selector='stopSharingNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method type='i20@0:4@8@12@16' selector='unsetNoteApplicationDataEntry:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i20@0:4@8@12@16' selector='unsetResourceApplicationDataEntry:::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<arg name='key' declared_type='NSString*' type='@' index='2'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='v16@0:4@8@12' selector='untagAll::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='guid' declared_type='EDAMGuid' type='@' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method type='i16@0:4@8@12' selector='updateLinkedNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='linkedNotebook' declared_type='EDAMLinkedNotebook*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='@16@0:4@8@12' selector='updateNote::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='note' declared_type='EDAMNote*' type='@' index='1'/>
<retval declared_type='EDAMNote*' type='@'/>
</method>
<method type='i16@0:4@8@12' selector='updateNotebook::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='notebook' declared_type='EDAMNotebook*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='updateResource::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='resource' declared_type='EDAMResource*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='updateSearch::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='search' declared_type='EDAMSavedSearch*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='i16@0:4@8@12' selector='updateTag::'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<arg name='tag' declared_type='EDAMTag*' type='@' index='1'/>
<retval declared_type='int32_t' type='i'/>
</method>
</informal_protocol>
<informal_protocol name='EDAMUserStore'>
<method type='@24@0:4@8@12@16@20' selector='authenticate::::'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<arg name='password' declared_type='NSString*' type='@' index='1'/>
<arg name='consumerKey' declared_type='NSString*' type='@' index='2'/>
<arg name='consumerSecret' declared_type='NSString*' type='@' index='3'/>
<retval declared_type='EDAMAuthenticationResult*' type='@'/>
</method>
<method type='B20@0:4@8s12s16' selector='checkVersion:::'>
<arg name='clientName' declared_type='NSString*' type='@' index='0'/>
<arg name='edamVersionMajor' declared_type='int16_t' type='s' index='1'/>
<arg name='edamVersionMinor' declared_type='int16_t' type='s' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='@12@0:4@8' selector='getBootstrapInfo:'>
<arg name='locale' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMBootstrapInfo*' type='@'/>
</method>
<method type='@12@0:4@8' selector='getNoteStoreUrl:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@12@0:4@8' selector='getPremiumInfo:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMPremiumInfo*' type='@'/>
</method>
<method type='@12@0:4@8' selector='getPublicUserInfo:'>
<arg name='username' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMPublicUserInfo*' type='@'/>
</method>
<method type='@12@0:4@8' selector='getUser:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMUser*' type='@'/>
</method>
<method type='@12@0:4@8' selector='refreshAuthentication:'>
<arg name='authenticationToken' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='EDAMAuthenticationResult*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='TProcessor'>
<method type='B16@0:4@8@12' selector='processOnInputProtocol:outputProtocol:'>
<arg name='inProtocol' declared_type='id' type='@' index='0'/>
<arg name='outProtocol' declared_type='id' type='@' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='TProcessorFactory'>
<method type='@12@0:4@8' selector='processorForTransport:'>
<arg name='transport' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='TProtocol'>
<method type='@8@0:4' selector='readBinary'>
<retval declared_type='NSData*' type='@'/>
</method>
<method type='B8@0:4' selector='readBool'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='C8@0:4' selector='readByte'>
<retval declared_type='unsigned char' type='C'/>
</method>
<method type='d8@0:4' selector='readDouble'>
<retval declared_type='double' type='d'/>
</method>
<method type='v20@0:4^@8^i12^i16' selector='readFieldBeginReturningName:type:fieldID:'>
<arg name='name' declared_type='NSString**' type='^@' index='0'/>
<arg name='fieldType' declared_type='int*' type='^i' index='1'/>
<arg name='fieldID' declared_type='int*' type='^i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='readFieldEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='s8@0:4' selector='readI16'>
<retval declared_type='short' type='s'/>
</method>
<method type='i8@0:4' selector='readI32'>
<retval declared_type='int32_t' type='i'/>
</method>
<method type='q8@0:4' selector='readI64'>
<retval declared_type='int64_t' type='q'/>
</method>
<method type='v16@0:4^i8^i12' selector='readListBeginReturningElementType:size:'>
<arg name='elementType' declared_type='int*' type='^i' index='0'/>
<arg name='size' declared_type='int*' type='^i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='readListEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4^i8^i12^i16' selector='readMapBeginReturningKeyType:valueType:size:'>
<arg name='keyType' declared_type='int*' type='^i' index='0'/>
<arg name='valueType' declared_type='int*' type='^i' index='1'/>
<arg name='size' declared_type='int*' type='^i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='readMapEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4^@8^i12^i16' selector='readMessageBeginReturningName:type:sequenceID:'>
<arg name='name' declared_type='NSString**' type='^@' index='0'/>
<arg name='type' declared_type='int*' type='^i' index='1'/>
<arg name='sequenceID' declared_type='int*' type='^i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='readMessageEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4^i8^i12' selector='readSetBeginReturningElementType:size:'>
<arg name='elementType' declared_type='int*' type='^i' index='0'/>
<arg name='size' declared_type='int*' type='^i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='readSetEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='readString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='v12@0:4^@8' selector='readStructBeginReturningName:'>
<arg name='name' declared_type='NSString**' type='^@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='readStructEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='transport'>
<retval declared_type='id' type='@'/>
</method>
<method type='v12@0:4@8' selector='writeBinary:'>
<arg name='data' declared_type='NSData*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4B8' selector='writeBool:'>
<arg name='value' declared_type='BOOL' type='B' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4C8' selector='writeByte:'>
<arg name='value' declared_type='uint8_t' type='C' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4d8' selector='writeDouble:'>
<arg name='value' declared_type='double' type='d' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8i12i16' selector='writeFieldBeginWithName:type:fieldID:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='fieldType' declared_type='int' type='i' index='1'/>
<arg name='fieldID' declared_type='int' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='writeFieldEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='writeFieldStop'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4s8' selector='writeI16:'>
<arg name='value' declared_type='short' type='s' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4i8' selector='writeI32:'>
<arg name='value' declared_type='int32_t' type='i' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4q8' selector='writeI64:'>
<arg name='value' declared_type='int64_t' type='q' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4i8i12' selector='writeListBeginWithElementType:size:'>
<arg name='elementType' declared_type='int' type='i' index='0'/>
<arg name='size' declared_type='int' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='writeListEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4i8i12i16' selector='writeMapBeginWithKeyType:valueType:size:'>
<arg name='keyType' declared_type='int' type='i' index='0'/>
<arg name='valueType' declared_type='int' type='i' index='1'/>
<arg name='size' declared_type='int' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='writeMapEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='v20@0:4@8i12i16' selector='writeMessageBeginWithName:type:sequenceID:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<arg name='messageType' declared_type='int' type='i' index='1'/>
<arg name='sequenceID' declared_type='int' type='i' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='writeMessageEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4i8i12' selector='writeSetBeginWithElementType:size:'>
<arg name='elementType' declared_type='int' type='i' index='0'/>
<arg name='size' declared_type='int' type='i' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='writeSetEnd'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='writeString:'>
<arg name='value' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='writeStructBeginWithName:'>
<arg name='name' declared_type='NSString*' type='@' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='writeStructEnd'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='TProtocolFactory'>
<method type='@12@0:4@8' selector='newProtocolOnTransport:'>
<arg name='transport' declared_type='id' type='@' index='0'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='TTransport'>
<method type='v8@0:4' selector='flush'>
<retval declared_type='void' type='v'/>
</method>
<method type='i20@0:4*8i12i16' selector='readAll:offset:length:'>
<arg name='buf' declared_type='uint8_t*' type='*' index='0'/>
<arg name='off' declared_type='int' type='i' index='1'/>
<arg name='len' declared_type='int' type='i' index='2'/>
<retval declared_type='int' type='i'/>
</method>
<method type='v20@0:4r*8I12I16' selector='write:offset:length:'>
<arg name='data' declared_type='uint8_t*' const='true' type='*' index='0'/>
<arg name='offset' declared_type='unsigned int' type='I' index='1'/>
<arg name='length' declared_type='unsigned int' type='I' index='2'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
